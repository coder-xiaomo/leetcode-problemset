{
    "data": {
        "question": {
            "questionId": "2167",
            "questionFrontendId": "2020",
            "boundTopicId": null,
            "title": "Number of Accounts That Did Not Stream",
            "titleSlug": "number-of-accounts-that-did-not-stream",
            "content": null,
            "translatedTitle": null,
            "translatedContent": null,
            "isPaidOnly": true,
            "difficulty": "Medium",
            "likes": 27,
            "dislikes": 204,
            "isLiked": null,
            "similarQuestions": "[]",
            "exampleTestcases": "{\"headers\":{\"Subscriptions\":[\"account_id\",\"start_date\",\"end_date\"],\"Streams\":[\"session_id\",\"account_id\",\"stream_date\"]},\"rows\":{\"Subscriptions\":[[9,\"2020-02-18\",\"2021-10-30\"],[3,\"2021-09-21\",\"2021-11-13\"],[11,\"2020-02-28\",\"2020-08-18\"],[13,\"2021-04-20\",\"2021-09-22\"],[4,\"2020-10-26\",\"2021-05-08\"],[5,\"2020-09-11\",\"2021-01-17\"]],\"Streams\":[[14,9,\"2020-05-16\"],[16,3,\"2021-10-27\"],[18,11,\"2020-04-29\"],[17,13,\"2021-08-08\"],[19,4,\"2020-12-31\"],[13,5,\"2021-01-05\"]]}}",
            "categoryTitle": "Database",
            "contributors": [],
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database",
                    "translatedName": null,
                    "__typename": "TopicTagNode"
                }
            ],
            "companyTagStats": null,
            "codeSnippets": null,
            "stats": "{\"totalAccepted\": \"8.9K\", \"totalSubmission\": \"12.4K\", \"totalAcceptedRaw\": 8926, \"totalSubmissionRaw\": 12443, \"acRate\": \"71.7%\"}",
            "hints": [],
            "solution": null,
            "status": null,
            "sampleTestCase": "{\"headers\":{\"Subscriptions\":[\"account_id\",\"start_date\",\"end_date\"],\"Streams\":[\"session_id\",\"account_id\",\"stream_date\"]},\"rows\":{\"Subscriptions\":[[9,\"2020-02-18\",\"2021-10-30\"],[3,\"2021-09-21\",\"2021-11-13\"],[11,\"2020-02-28\",\"2020-08-18\"],[13,\"2021-04-20\",\"2021-09-22\"],[4,\"2020-10-26\",\"2021-05-08\"],[5,\"2020-09-11\",\"2021-01-17\"]],\"Streams\":[[14,9,\"2020-05-16\"],[16,3,\"2021-10-27\"],[18,11,\"2020-04-29\"],[17,13,\"2021-08-08\"],[19,4,\"2020-12-31\"],[13,5,\"2021-01-05\"]]}}",
            "metaData": "{\"mysql\": [\"Create table If Not Exists Subscriptions (account_id int, start_date date, end_date date)\", \"Create table If Not Exists Streams (session_id int, account_id int, stream_date date)\"], \"mssql\": [\"Create table Subscriptions (account_id int, start_date date, end_date date)\", \"Create table Streams (session_id int, account_id int, stream_date date)\"], \"oraclesql\": [\"Create table Subscriptions (account_id int, start_date date, end_date date)\", \"Create table Streams (session_id int, account_id int, stream_date date)\", \"ALTER SESSION SET nls_date_format='YYYY-MM-DD'\"], \"database\": true, \"name\": \"find_target_accounts\", \"pythondata\": [\"Subscriptions = pd.DataFrame([], columns=['account_id', 'start_date', 'end_date']).astype({'account_id':'Int64', 'start_date':'datetime64[ns]', 'end_date':'datetime64[ns]'})\", \"Streams = pd.DataFrame([], columns=['session_id', 'account_id', 'stream_date']).astype({'session_id':'Int64', 'account_id':'Int64', 'stream_date':'datetime64[ns]'})\"], \"postgresql\": [\"Create table If Not Exists Subscriptions (account_id int, start_date date, end_date date)\", \"Create table If Not Exists Streams (session_id int, account_id int, stream_date date)\"], \"database_schema\": {\"Subscriptions\": {\"account_id\": \"INT\", \"start_date\": \"DATE\", \"end_date\": \"DATE\"}, \"Streams\": {\"session_id\": \"INT\", \"account_id\": \"INT\", \"stream_date\": \"DATE\"}}}",
            "judgerAvailable": true,
            "judgeType": "large",
            "mysqlSchemas": [
                "Create table If Not Exists Subscriptions (account_id int, start_date date, end_date date)",
                "Create table If Not Exists Streams (session_id int, account_id int, stream_date date)",
                "Truncate table Subscriptions",
                "insert into Subscriptions (account_id, start_date, end_date) values ('9', '2020-02-18', '2021-10-30')",
                "insert into Subscriptions (account_id, start_date, end_date) values ('3', '2021-09-21', '2021-11-13')",
                "insert into Subscriptions (account_id, start_date, end_date) values ('11', '2020-02-28', '2020-08-18')",
                "insert into Subscriptions (account_id, start_date, end_date) values ('13', '2021-04-20', '2021-09-22')",
                "insert into Subscriptions (account_id, start_date, end_date) values ('4', '2020-10-26', '2021-05-08')",
                "insert into Subscriptions (account_id, start_date, end_date) values ('5', '2020-09-11', '2021-01-17')",
                "Truncate table Streams",
                "insert into Streams (session_id, account_id, stream_date) values ('14', '9', '2020-05-16')",
                "insert into Streams (session_id, account_id, stream_date) values ('16', '3', '2021-10-27')",
                "insert into Streams (session_id, account_id, stream_date) values ('18', '11', '2020-04-29')",
                "insert into Streams (session_id, account_id, stream_date) values ('17', '13', '2021-08-08')",
                "insert into Streams (session_id, account_id, stream_date) values ('19', '4', '2020-12-31')",
                "insert into Streams (session_id, account_id, stream_date) values ('13', '5', '2021-01-05')"
            ],
            "enableRunCode": true,
            "enableTestMode": false,
            "enableDebugger": false,
            "envInfo": "{\"mysql\": [\"MySQL\", \"<p><code>MySQL 8.0</code>.</p>\"], \"mssql\": [\"MS SQL Server\", \"<p><code>mssql server 2019</code>.</p>\"], \"oraclesql\": [\"Oracle\", \"<p><code>Oracle Sql 11.2</code>.</p>\"], \"pythondata\": [\"Pandas\", \"<p>Python 3.10 with Pandas 2.0.2 and NumPy 1.25.0</p>\"], \"postgresql\": [\"PostgreSQL\", \"<p>PostgreSQL 16</p>\"]}",
            "libraryUrl": null,
            "adminUrl": null,
            "challengeQuestion": null,
            "__typename": "QuestionNode"
        }
    }
}