{
    "data": {
        "question": {
            "questionId": "1981",
            "questionFrontendId": "1831",
            "boundTopicId": null,
            "title": "Maximum Transaction Each Day",
            "titleSlug": "maximum-transaction-each-day",
            "content": null,
            "translatedTitle": null,
            "translatedContent": null,
            "isPaidOnly": true,
            "difficulty": "Medium",
            "likes": 77,
            "dislikes": 1,
            "isLiked": null,
            "similarQuestions": "[]",
            "exampleTestcases": "{\"headers\": {\"Transactions\": [\"transaction_id\", \"day\", \"amount\"]}, \"rows\": {\"Transactions\": [[8, \"2021-4-3 15:57:28\", 57], [9, \"2021-4-28 08:47:25\", 21], [1, \"2021-4-29 13:28:30\", 58], [5, \"2021-4-28 16:39:59\", 40], [6, \"2021-4-29 23:39:28\", 58]]}}",
            "categoryTitle": "Database",
            "contributors": [],
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database",
                    "translatedName": null,
                    "__typename": "TopicTagNode"
                }
            ],
            "companyTagStats": null,
            "codeSnippets": null,
            "stats": "{\"totalAccepted\": \"15.7K\", \"totalSubmission\": \"19.3K\", \"totalAcceptedRaw\": 15715, \"totalSubmissionRaw\": 19322, \"acRate\": \"81.3%\"}",
            "hints": [],
            "solution": null,
            "status": null,
            "sampleTestCase": "{\"headers\": {\"Transactions\": [\"transaction_id\", \"day\", \"amount\"]}, \"rows\": {\"Transactions\": [[8, \"2021-4-3 15:57:28\", 57], [9, \"2021-4-28 08:47:25\", 21], [1, \"2021-4-29 13:28:30\", 58], [5, \"2021-4-28 16:39:59\", 40], [6, \"2021-4-29 23:39:28\", 58]]}}",
            "metaData": "{\"mysql\": [\"Create table If Not Exists Transactions (transaction_id int, day date, amount int)\"], \"mssql\": [\"Create table Transactions (transaction_id int, day datetime, amount int)\"], \"oraclesql\": [\"Create table Transactions (transaction_id int, day date, amount int)\", \"ALTER SESSION SET nls_date_format='YYYY-MM-DD HH24:MI:SS'\"], \"database\": true, \"name\": \"find_maximum_transaction\", \"pythondata\": [\"Transactions = pd.DataFrame([], columns=['transaction_id', 'day', 'amount']).astype({'transaction_id':'Int64', 'day':'datetime64[ns]', 'amount':'Int64'})\"], \"postgresql\": [\"Create table If Not Exists Transactions (transaction_id int, day datetime, amount int)\"], \"database_schema\": {\"Transactions\": {\"transaction_id\": \"INT\", \"day\": \"DATE\", \"amount\": \"INT\"}}}",
            "judgerAvailable": true,
            "judgeType": "large",
            "mysqlSchemas": [
                "Create table If Not Exists Transactions (transaction_id int, day date, amount int)",
                "Truncate table Transactions",
                "insert into Transactions (transaction_id, day, amount) values ('8', '2021-4-3 15:57:28', '57')",
                "insert into Transactions (transaction_id, day, amount) values ('9', '2021-4-28 08:47:25', '21')",
                "insert into Transactions (transaction_id, day, amount) values ('1', '2021-4-29 13:28:30', '58')",
                "insert into Transactions (transaction_id, day, amount) values ('5', '2021-4-28 16:39:59', '40')",
                "insert into Transactions (transaction_id, day, amount) values ('6', '2021-4-29 23:39:28', '58')"
            ],
            "enableRunCode": true,
            "enableTestMode": false,
            "enableDebugger": false,
            "envInfo": "{\"mysql\": [\"MySQL\", \"<p><code>MySQL 8.0</code>.</p>\"], \"mssql\": [\"MS SQL Server\", \"<p><code>mssql server 2019</code>.</p>\"], \"oraclesql\": [\"Oracle\", \"<p><code>Oracle Sql 11.2</code>.</p>\"], \"pythondata\": [\"Pandas\", \"<p>Python 3.10 with Pandas 2.0.2 and NumPy 1.25.0</p>\"], \"postgresql\": [\"PostgreSQL\", \"<p>PostgreSQL 16</p>\"]}",
            "libraryUrl": null,
            "adminUrl": null,
            "challengeQuestion": null,
            "__typename": "QuestionNode"
        }
    }
}