{
    "data": {
        "question": {
            "questionId": "2064",
            "questionFrontendId": "1919",
            "boundTopicId": null,
            "title": "Leetcodify Similar Friends",
            "titleSlug": "leetcodify-similar-friends",
            "content": null,
            "translatedTitle": null,
            "translatedContent": null,
            "isPaidOnly": true,
            "difficulty": "Hard",
            "likes": 54,
            "dislikes": 6,
            "isLiked": null,
            "similarQuestions": "[{\"title\": \"Leetcodify Friends Recommendations\", \"titleSlug\": \"leetcodify-friends-recommendations\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
            "exampleTestcases": "{\"headers\":{\"Listens\":[\"user_id\",\"song_id\",\"day\"],\"Friendship\":[\"user1_id\",\"user2_id\"]},\"rows\":{\"Listens\":[[1,10,\"2021-03-15\"],[1,11,\"2021-03-15\"],[1,12,\"2021-03-15\"],[2,10,\"2021-03-15\"],[2,11,\"2021-03-15\"],[2,12,\"2021-03-15\"],[3,10,\"2021-03-15\"],[3,11,\"2021-03-15\"],[3,12,\"2021-03-15\"],[4,10,\"2021-03-15\"],[4,11,\"2021-03-15\"],[4,13,\"2021-03-15\"],[5,10,\"2021-03-16\"],[5,11,\"2021-03-16\"],[5,12,\"2021-03-16\"]],\"Friendship\":[[1,2],[2,4],[2,5]]}}",
            "categoryTitle": "Database",
            "contributors": [],
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database",
                    "translatedName": null,
                    "__typename": "TopicTagNode"
                }
            ],
            "companyTagStats": null,
            "codeSnippets": null,
            "stats": "{\"totalAccepted\": \"4.7K\", \"totalSubmission\": \"11.4K\", \"totalAcceptedRaw\": 4704, \"totalSubmissionRaw\": 11372, \"acRate\": \"41.4%\"}",
            "hints": [],
            "solution": null,
            "status": null,
            "sampleTestCase": "{\"headers\":{\"Listens\":[\"user_id\",\"song_id\",\"day\"],\"Friendship\":[\"user1_id\",\"user2_id\"]},\"rows\":{\"Listens\":[[1,10,\"2021-03-15\"],[1,11,\"2021-03-15\"],[1,12,\"2021-03-15\"],[2,10,\"2021-03-15\"],[2,11,\"2021-03-15\"],[2,12,\"2021-03-15\"],[3,10,\"2021-03-15\"],[3,11,\"2021-03-15\"],[3,12,\"2021-03-15\"],[4,10,\"2021-03-15\"],[4,11,\"2021-03-15\"],[4,13,\"2021-03-15\"],[5,10,\"2021-03-16\"],[5,11,\"2021-03-16\"],[5,12,\"2021-03-16\"]],\"Friendship\":[[1,2],[2,4],[2,5]]}}",
            "metaData": "{\"mysql\": [\"Create table If Not Exists Listens (user_id int, song_id int, day date)\", \"Create table If Not Exists Friendship (user1_id int, user2_id int)\"], \"mssql\": [\"Create table Listens (user_id int, song_id int, day date)\", \"Create table Friendship (user1_id int, user2_id int)\"], \"oraclesql\": [\"Create table Listens (user_id int, song_id int, day date)\", \"Create table Friendship (user1_id int, user2_id int)\", \"ALTER SESSION SET nls_date_format='YYYY-MM-DD'\"], \"database\": true, \"name\": \"leetcodify_similar_friends\", \"pythondata\": [\"Listens = pd.DataFrame([], columns=['user_id', 'song_id', 'day']).astype({'user_id':'Int64', 'song_id':'Int64', 'day':'datetime64[ns]'})\", \"Friendship = pd.DataFrame([], columns=['user1_id', 'user2_id']).astype({'user1_id':'Int64', 'user2_id':'Int64'})\"], \"postgresql\": [\"Create table If Not Exists Listens (user_id int, song_id int, day date)\", \"Create table If Not Exists Friendship (user1_id int, user2_id int)\"], \"database_schema\": {\"Listens\": {\"user_id\": \"INT\", \"song_id\": \"INT\", \"day\": \"DATE\"}, \"Friendship\": {\"user1_id\": \"INT\", \"user2_id\": \"INT\"}}}",
            "judgerAvailable": true,
            "judgeType": "large",
            "mysqlSchemas": [
                "Create table If Not Exists Listens (user_id int, song_id int, day date)",
                "Create table If Not Exists Friendship (user1_id int, user2_id int)",
                "Truncate table Listens",
                "insert into Listens (user_id, song_id, day) values ('1', '10', '2021-03-15')",
                "insert into Listens (user_id, song_id, day) values ('1', '11', '2021-03-15')",
                "insert into Listens (user_id, song_id, day) values ('1', '12', '2021-03-15')",
                "insert into Listens (user_id, song_id, day) values ('2', '10', '2021-03-15')",
                "insert into Listens (user_id, song_id, day) values ('2', '11', '2021-03-15')",
                "insert into Listens (user_id, song_id, day) values ('2', '12', '2021-03-15')",
                "insert into Listens (user_id, song_id, day) values ('3', '10', '2021-03-15')",
                "insert into Listens (user_id, song_id, day) values ('3', '11', '2021-03-15')",
                "insert into Listens (user_id, song_id, day) values ('3', '12', '2021-03-15')",
                "insert into Listens (user_id, song_id, day) values ('4', '10', '2021-03-15')",
                "insert into Listens (user_id, song_id, day) values ('4', '11', '2021-03-15')",
                "insert into Listens (user_id, song_id, day) values ('4', '13', '2021-03-15')",
                "insert into Listens (user_id, song_id, day) values ('5', '10', '2021-03-16')",
                "insert into Listens (user_id, song_id, day) values ('5', '11', '2021-03-16')",
                "insert into Listens (user_id, song_id, day) values ('5', '12', '2021-03-16')",
                "Truncate table Friendship",
                "insert into Friendship (user1_id, user2_id) values ('1', '2')",
                "insert into Friendship (user1_id, user2_id) values ('2', '4')",
                "insert into Friendship (user1_id, user2_id) values ('2', '5')"
            ],
            "enableRunCode": true,
            "enableTestMode": false,
            "enableDebugger": false,
            "envInfo": "{\"mysql\": [\"MySQL\", \"<p><code>MySQL 8.0</code>.</p>\"], \"mssql\": [\"MS SQL Server\", \"<p><code>mssql server 2019</code>.</p>\"], \"oraclesql\": [\"Oracle\", \"<p><code>Oracle Sql 11.2</code>.</p>\"], \"pythondata\": [\"Pandas\", \"<p>Python 3.10 with Pandas 2.0.2 and NumPy 1.25.0</p>\"], \"postgresql\": [\"PostgreSQL\", \"<p>PostgreSQL 16</p>\"]}",
            "libraryUrl": null,
            "adminUrl": null,
            "challengeQuestion": null,
            "__typename": "QuestionNode"
        }
    }
}