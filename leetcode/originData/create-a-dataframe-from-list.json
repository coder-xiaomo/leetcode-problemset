{
    "data": {
        "question": {
            "questionId": "3062",
            "questionFrontendId": "2877",
            "boundTopicId": null,
            "title": "Create a DataFrame from List",
            "titleSlug": "create-a-dataframe-from-list",
            "content": "<p>Write a solution to <strong>create</strong> a DataFrame from a 2D list called <code>student_data</code>. This 2D list contains the IDs and ages of some students.</p>\n\n<p>The DataFrame should have two columns, <code>student_id</code> and <code>age</code>, and be in the same order as the original 2D list.</p>\n\n<p>The result format is in the following example.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:\n</strong>student_data:<strong>\n</strong><code>[\n  [1, 15],\n  [2, 11],\n  [3, 11],\n  [4, 20]\n]</code>\n<strong>Output:</strong>\n+------------+-----+\n| student_id | age |\n+------------+-----+\n| 1          | 15  |\n| 2          | 11  |\n| 3          | 11  |\n| 4          | 20  |\n+------------+-----+\n<strong>Explanation:</strong>\nA DataFrame was created on top of student_data, with two columns named <code>student_id</code> and <code>age</code>.\n</pre>\n",
            "translatedTitle": null,
            "translatedContent": null,
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 8,
            "dislikes": 1,
            "isLiked": null,
            "similarQuestions": "[]",
            "exampleTestcases": "[[1,15],[2,11],[3,11],[4,20]]",
            "categoryTitle": "Algorithms",
            "contributors": [],
            "topicTags": [],
            "companyTagStats": null,
            "codeSnippets": [
                {
                    "lang": "Pandas",
                    "langSlug": "pythondata",
                    "code": "import pandas as pd\n\ndef createDataframe(student_data: List[List[int]]) -> pd.DataFrame:\n    ",
                    "__typename": "CodeSnippetNode"
                }
            ],
            "stats": "{\"totalAccepted\": \"473\", \"totalSubmission\": \"564\", \"totalAcceptedRaw\": 473, \"totalSubmissionRaw\": 564, \"acRate\": \"83.9%\"}",
            "hints": [
                "Consider using a built-in function in pandas library and specifying the column names within it."
            ],
            "solution": {
                "id": "2099",
                "canSeeDetail": true,
                "paidOnly": false,
                "hasVideoSolution": false,
                "paidOnlyVideo": true,
                "__typename": "ArticleNode"
            },
            "status": null,
            "sampleTestCase": "[[1,15],[2,11],[3,11],[4,20]]",
            "metaData": "{\n  \"name\": \"create_a_dataframe\",\n  \"params\": [\n    {\n      \"name\": \"student_data\",\n      \"type\": \"list<list<integer>>\"\n    }\n  ],\n  \"return\": {\n    \"type\": \"DataFrame\"\n  },\n  \"data\": true,\n  \"manual\": true\n}",
            "judgerAvailable": true,
            "judgeType": "large",
            "mysqlSchemas": [],
            "enableRunCode": true,
            "enableTestMode": false,
            "enableDebugger": true,
            "envInfo": "{\"pythondata\": [\"Pandas\", \"<p>Python 3.10 with Pandas 2.0.2 and NumPy 1.25.0</p>\"]}",
            "libraryUrl": null,
            "adminUrl": null,
            "challengeQuestion": null,
            "__typename": "QuestionNode"
        }
    }
}