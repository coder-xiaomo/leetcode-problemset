{
    "data": {
        "question": {
            "questionId": "2446",
            "questionFrontendId": "2314",
            "boundTopicId": null,
            "title": "The First Day of the Maximum Recorded Degree in Each City",
            "titleSlug": "the-first-day-of-the-maximum-recorded-degree-in-each-city",
            "content": null,
            "translatedTitle": null,
            "translatedContent": null,
            "isPaidOnly": true,
            "difficulty": "Medium",
            "likes": 48,
            "dislikes": 2,
            "isLiked": null,
            "similarQuestions": "[]",
            "exampleTestcases": "{\"headers\": {\"Weather\": [\"city_id\", \"day\", \"degree\"]}, \"rows\": {\"Weather\": [[1, \"2022-01-07\", -12], [1, \"2022-03-07\", 5], [1, \"2022-07-07\", 24], [2, \"2022-08-07\", 37], [2, \"2022-08-17\", 37], [3, \"2022-02-07\", -7], [3, \"2022-12-07\", -6]]}}",
            "categoryTitle": "Database",
            "contributors": [],
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database",
                    "translatedName": null,
                    "__typename": "TopicTagNode"
                }
            ],
            "companyTagStats": null,
            "codeSnippets": null,
            "stats": "{\"totalAccepted\": \"4.3K\", \"totalSubmission\": \"6K\", \"totalAcceptedRaw\": 4264, \"totalSubmissionRaw\": 6022, \"acRate\": \"70.8%\"}",
            "hints": [],
            "solution": null,
            "status": null,
            "sampleTestCase": "{\"headers\": {\"Weather\": [\"city_id\", \"day\", \"degree\"]}, \"rows\": {\"Weather\": [[1, \"2022-01-07\", -12], [1, \"2022-03-07\", 5], [1, \"2022-07-07\", 24], [2, \"2022-08-07\", 37], [2, \"2022-08-17\", 37], [3, \"2022-02-07\", -7], [3, \"2022-12-07\", -6]]}}",
            "metaData": "{\"mysql\": [\"Create table If Not Exists Weather (city_id int, day date, degree int)\"], \"mssql\": [\"Create table Weather (city_id int, day date, degree int)\"], \"oraclesql\": [\"Create table Weather (city_id int, day date, degree int)\", \"ALTER SESSION SET nls_date_format='YYYY-MM-DD'\"], \"database\": true, \"name\": \"find_the_first_day\", \"pythondata\": [\"Weather = pd.DataFrame([], columns=['city_id', 'day', 'degree']).astype({'city_id':'Int64', 'day':'datetime64[ns]', 'degree':'Int64'})\"], \"postgresql\": [\"Create table If Not Exists Weather (city_id int, day date, degree int)\"], \"database_schema\": {\"Weather\": {\"city_id\": \"INT\", \"day\": \"DATE\", \"degree\": \"INT\"}}}",
            "judgerAvailable": true,
            "judgeType": "large",
            "mysqlSchemas": [
                "Create table If Not Exists Weather (city_id int, day date, degree int)",
                "Truncate table Weather",
                "insert into Weather (city_id, day, degree) values ('1', '2022-01-07', '-12')",
                "insert into Weather (city_id, day, degree) values ('1', '2022-03-07', '5')",
                "insert into Weather (city_id, day, degree) values ('1', '2022-07-07', '24')",
                "insert into Weather (city_id, day, degree) values ('2', '2022-08-07', '37')",
                "insert into Weather (city_id, day, degree) values ('2', '2022-08-17', '37')",
                "insert into Weather (city_id, day, degree) values ('3', '2022-02-07', '-7')",
                "insert into Weather (city_id, day, degree) values ('3', '2022-12-07', '-6')"
            ],
            "enableRunCode": true,
            "enableTestMode": false,
            "enableDebugger": false,
            "envInfo": "{\"mysql\": [\"MySQL\", \"<p><code>MySQL 8.0</code>.</p>\"], \"mssql\": [\"MS SQL Server\", \"<p><code>mssql server 2019</code>.</p>\"], \"oraclesql\": [\"Oracle\", \"<p><code>Oracle Sql 11.2</code>.</p>\"], \"pythondata\": [\"Pandas\", \"<p>Python 3.10 with Pandas 2.0.2 and NumPy 1.25.0</p>\"], \"postgresql\": [\"PostgreSQL\", \"<p>PostgreSQL 16</p>\"]}",
            "libraryUrl": null,
            "adminUrl": null,
            "challengeQuestion": null,
            "__typename": "QuestionNode"
        }
    }
}