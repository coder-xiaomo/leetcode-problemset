{
    "data": {
        "question": {
            "questionId": "612",
            "questionFrontendId": "612",
            "boundTopicId": null,
            "title": "Shortest Distance in a Plane",
            "titleSlug": "shortest-distance-in-a-plane",
            "content": null,
            "translatedTitle": null,
            "translatedContent": null,
            "isPaidOnly": true,
            "difficulty": "Medium",
            "likes": 214,
            "dislikes": 70,
            "isLiked": null,
            "similarQuestions": "[]",
            "exampleTestcases": "{\"headers\":{\"Point2D\":[\"x\",\"y\"]},\"rows\":{\"Point2D\":[[-1,-1],[0,0],[-1,-2]]}}",
            "categoryTitle": "Database",
            "contributors": [],
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database",
                    "translatedName": null,
                    "__typename": "TopicTagNode"
                }
            ],
            "companyTagStats": null,
            "codeSnippets": null,
            "stats": "{\"totalAccepted\": \"38.8K\", \"totalSubmission\": \"62.7K\", \"totalAcceptedRaw\": 38823, \"totalSubmissionRaw\": 62732, \"acRate\": \"61.9%\"}",
            "hints": [],
            "solution": {
                "id": "178",
                "canSeeDetail": false,
                "paidOnly": true,
                "hasVideoSolution": false,
                "paidOnlyVideo": true,
                "__typename": "ArticleNode"
            },
            "status": null,
            "sampleTestCase": "{\"headers\":{\"Point2D\":[\"x\",\"y\"]},\"rows\":{\"Point2D\":[[-1,-1],[0,0],[-1,-2]]}}",
            "metaData": "{\"mysql\": [\"Create Table If Not Exists Point2D (x int not null, y int not null)\"], \"mssql\": [\"Create Table Point2D (x int not null, y int not null)\"], \"oraclesql\": [\"Create Table Point2D (x int not null, y int not null)\"], \"database\": true, \"name\": \"shortest_distance\", \"pythondata\": [\"Point2D = pd.DataFrame([], columns=['x', 'y']).astype({'x':'Int64', 'y':'Int64'})\"], \"postgresql\": [\"\\nCreate Table If Not Exists Point2D (x int not null, y int not null)\"], \"database_schema\": {\"Point2D\": {\"x\": \"INT\", \"y\": \"INT\"}}}",
            "judgerAvailable": true,
            "judgeType": "large",
            "mysqlSchemas": [
                "Create Table If Not Exists Point2D (x int not null, y int not null)",
                "Truncate table Point2D",
                "insert into Point2D (x, y) values ('-1', '-1')",
                "insert into Point2D (x, y) values ('0', '0')",
                "insert into Point2D (x, y) values ('-1', '-2')"
            ],
            "enableRunCode": true,
            "enableTestMode": false,
            "enableDebugger": false,
            "envInfo": "{\"mysql\": [\"MySQL\", \"<p><code>MySQL 8.0</code>.</p>\"], \"mssql\": [\"MS SQL Server\", \"<p><code>mssql server 2019</code>.</p>\"], \"oraclesql\": [\"Oracle\", \"<p><code>Oracle Sql 11.2</code>.</p>\"], \"pythondata\": [\"Pandas\", \"<p>Python 3.10 with Pandas 2.0.2 and NumPy 1.25.0</p>\"], \"postgresql\": [\"PostgreSQL\", \"<p>PostgreSQL 16</p>\"]}",
            "libraryUrl": null,
            "adminUrl": null,
            "challengeQuestion": null,
            "__typename": "QuestionNode"
        }
    }
}