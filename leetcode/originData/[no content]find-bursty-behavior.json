{
    "data": {
        "question": {
            "questionId": "3400",
            "questionFrontendId": "3089",
            "boundTopicId": null,
            "title": "Find Bursty Behavior",
            "titleSlug": "find-bursty-behavior",
            "content": null,
            "translatedTitle": null,
            "translatedContent": null,
            "isPaidOnly": true,
            "difficulty": "Medium",
            "likes": 3,
            "dislikes": 8,
            "isLiked": null,
            "similarQuestions": "[]",
            "exampleTestcases": "{\"headers\": {\"Posts\": [\"post_id\", \"user_id\", \"post_date\"]}, \"rows\": {\"Posts\": [[1, 1, \"2024-02-27\"], [2, 5, \"2024-02-06\"], [3, 3, \"2024-02-25\"], [4, 3, \"2024-02-14\"], [5, 3, \"2024-02-06\"], [6, 2, \"2024-02-25\"]]}}",
            "categoryTitle": "Database",
            "contributors": [],
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database",
                    "translatedName": null,
                    "__typename": "TopicTagNode"
                }
            ],
            "companyTagStats": null,
            "codeSnippets": null,
            "stats": "{\"totalAccepted\": \"252\", \"totalSubmission\": \"647\", \"totalAcceptedRaw\": 252, \"totalSubmissionRaw\": 647, \"acRate\": \"38.9%\"}",
            "hints": [],
            "solution": null,
            "status": null,
            "sampleTestCase": "{\"headers\": {\"Posts\": [\"post_id\", \"user_id\", \"post_date\"]}, \"rows\": {\"Posts\": [[1, 1, \"2024-02-27\"], [2, 5, \"2024-02-06\"], [3, 3, \"2024-02-25\"], [4, 3, \"2024-02-14\"], [5, 3, \"2024-02-06\"], [6, 2, \"2024-02-25\"]]}}",
            "metaData": "{\"mysql\": [\"Create table If Not Exists Posts (post_id int, user_id int,  post_date date)\"], \"mssql\": [\"Create table Posts (post_id int, user_id int,  post_date date)\"], \"oraclesql\": [\"Create table Posts (post_id int, user_id int,  post_date date)\", \"ALTER SESSION SET nls_date_format='YYYY-MM-DD'\"], \"database\": true, \"name\": \"find_bursty_behavior\", \"pythondata\": [\"Posts = pd.DataFrame([], columns=['post_id', 'user_id', 'post_date']).astype({'post_id':'Int64', 'user_id':'Int64', 'post_date':'datetime64[ns]'})\\n\"], \"postgresql\": [\"CREATE TABLE Posts (\\n    post_id int,\\n    user_id int,\\n    post_date date\\n);\\n\", \"SELECT TO_CHAR(post_date, 'YYYY-MM-DD') AS formatted_post_date FROM Posts;\\n\"], \"database_schema\": {\"Posts\": {\"post_id\": \"INT\", \"user_id\": \"INT\", \"post_date\": \"DATE\"}}}",
            "judgerAvailable": true,
            "judgeType": "large",
            "mysqlSchemas": [
                "Create table If Not Exists Posts (post_id int, user_id int,  post_date date)",
                "Truncate table Posts",
                "insert into Posts (post_id, user_id, post_date) values ('1', '1', '2024-02-27')",
                "insert into Posts (post_id, user_id, post_date) values ('2', '5', '2024-02-06')",
                "insert into Posts (post_id, user_id, post_date) values ('3', '3', '2024-02-25')",
                "insert into Posts (post_id, user_id, post_date) values ('4', '3', '2024-02-14')",
                "insert into Posts (post_id, user_id, post_date) values ('5', '3', '2024-02-06')",
                "insert into Posts (post_id, user_id, post_date) values ('6', '2', '2024-02-25')"
            ],
            "enableRunCode": true,
            "enableTestMode": false,
            "enableDebugger": false,
            "envInfo": "{\"mysql\": [\"MySQL\", \"<p><code>MySQL 8.0</code>.</p>\"], \"mssql\": [\"MS SQL Server\", \"<p><code>mssql server 2019</code>.</p>\"], \"oraclesql\": [\"Oracle\", \"<p><code>Oracle Sql 11.2</code>.</p>\"], \"pythondata\": [\"Pandas\", \"<p>Python 3.10 with Pandas 2.0.2 and NumPy 1.25.0</p>\"], \"postgresql\": [\"PostgreSQL\", \"<p>PostgreSQL 16</p>\"]}",
            "libraryUrl": null,
            "adminUrl": null,
            "challengeQuestion": null,
            "__typename": "QuestionNode"
        }
    }
}