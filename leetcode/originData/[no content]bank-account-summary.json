{
    "data": {
        "question": {
            "questionId": "1702",
            "questionFrontendId": "1555",
            "boundTopicId": null,
            "title": "Bank Account Summary",
            "titleSlug": "bank-account-summary",
            "content": null,
            "translatedTitle": null,
            "translatedContent": null,
            "isPaidOnly": true,
            "difficulty": "Medium",
            "likes": 132,
            "dislikes": 28,
            "isLiked": null,
            "similarQuestions": "[]",
            "exampleTestcases": "{\"headers\": {\"Users\": [\"user_id\", \"user_name\", \"credit\"], \"Transactions\": [\"trans_id\", \"paid_by\", \"paid_to\", \"amount\", \"transacted_on\"]}, \"rows\": {\"Users\": [[1, \"Moustafa\", 100], [2, \"Jonathan\", 200], [3, \"Winston\", 10000], [4, \"Luis\", 800]], \"Transactions\": [[1, 1, 3, 400, \"2020-08-01\"], [2, 3, 2, 500, \"2020-08-02\"], [3, 2, 1, 200, \"2020-08-03\"]]}}",
            "categoryTitle": "Database",
            "contributors": [],
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database",
                    "translatedName": null,
                    "__typename": "TopicTagNode"
                }
            ],
            "companyTagStats": null,
            "codeSnippets": null,
            "stats": "{\"totalAccepted\": \"15.8K\", \"totalSubmission\": \"30.8K\", \"totalAcceptedRaw\": 15803, \"totalSubmissionRaw\": 30808, \"acRate\": \"51.3%\"}",
            "hints": [],
            "solution": null,
            "status": null,
            "sampleTestCase": "{\"headers\": {\"Users\": [\"user_id\", \"user_name\", \"credit\"], \"Transactions\": [\"trans_id\", \"paid_by\", \"paid_to\", \"amount\", \"transacted_on\"]}, \"rows\": {\"Users\": [[1, \"Moustafa\", 100], [2, \"Jonathan\", 200], [3, \"Winston\", 10000], [4, \"Luis\", 800]], \"Transactions\": [[1, 1, 3, 400, \"2020-08-01\"], [2, 3, 2, 500, \"2020-08-02\"], [3, 2, 1, 200, \"2020-08-03\"]]}}",
            "metaData": "{\"mysql\": [\"Create table If Not Exists Users (user_id int, user_name varchar(20), credit int)\\n\", \"Create table If Not Exists Transactions (trans_id int, paid_by int, paid_to int, amount int, transacted_on date)\"], \"mssql\": [\"Create table Users (user_id int, user_name varchar(20), credit int)\\n\", \"Create table Transactions (trans_id int, paid_by int, paid_to int, amount int, transacted_on date)\\n\"], \"oraclesql\": [\"Create table Users (user_id int, user_name varchar(20), credit int)\\n\", \"Create table Transactions (trans_id int, paid_by int, paid_to int, amount int, transacted_on date)\\n\", \"ALTER SESSION SET nls_date_format='YYYY-MM-DD'\\n\"], \"database\": true, \"name\": \"bank_account_summary\", \"pythondata\": [\"Users = pd.DataFrame([], columns=['user_id', 'user_name', 'credit']).astype({'user_id':'Int64', 'user_name':'object', 'credit':'Int64'})\", \"Transactions = pd.DataFrame([], columns=['trans_id', 'paid_by', 'paid_to', 'amount', 'transacted_on']).astype({'trans_id':'Int64', 'paid_by':'Int64', 'paid_to':'Int64', 'amount':'Int64', 'transacted_on':'datetime64[ns]'})\"], \"postgresql\": [\"\\nCreate table If Not Exists Users (user_id int, user_name varchar(20), credit int)\\n\", \"Create table If Not Exists Transactions (trans_id int, paid_by int, paid_to int, amount int, transacted_on date)\"], \"database_schema\": {\"Users\": {\"user_id\": \"INT\", \"user_name\": \"VARCHAR(20)\", \"credit\": \"INT\"}, \"Transactions\": {\"trans_id\": \"INT\", \"paid_by\": \"INT\", \"paid_to\": \"INT\", \"amount\": \"INT\", \"transacted_on\": \"DATE\"}}}",
            "judgerAvailable": true,
            "judgeType": "large",
            "mysqlSchemas": [
                "Create table If Not Exists Users (user_id int, user_name varchar(20), credit int)\n",
                "Create table If Not Exists Transactions (trans_id int, paid_by int, paid_to int, amount int, transacted_on date)",
                "Truncate table Users",
                "insert into Users (user_id, user_name, credit) values ('1', 'Moustafa', '100')",
                "insert into Users (user_id, user_name, credit) values ('2', 'Jonathan', '200')",
                "insert into Users (user_id, user_name, credit) values ('3', 'Winston', '10000')",
                "insert into Users (user_id, user_name, credit) values ('4', 'Luis', '800')",
                "Truncate table Transactions",
                "insert into Transactions (trans_id, paid_by, paid_to, amount, transacted_on) values ('1', '1', '3', '400', '2020-08-01')",
                "insert into Transactions (trans_id, paid_by, paid_to, amount, transacted_on) values ('2', '3', '2', '500', '2020-08-02')",
                "insert into Transactions (trans_id, paid_by, paid_to, amount, transacted_on) values ('3', '2', '1', '200', '2020-08-03')"
            ],
            "enableRunCode": true,
            "enableTestMode": false,
            "enableDebugger": false,
            "envInfo": "{\"mysql\": [\"MySQL\", \"<p><code>MySQL 8.0</code>.</p>\"], \"mssql\": [\"MS SQL Server\", \"<p><code>mssql server 2019</code>.</p>\"], \"oraclesql\": [\"Oracle\", \"<p><code>Oracle Sql 11.2</code>.</p>\"], \"pythondata\": [\"Pandas\", \"<p>Python 3.10 with Pandas 2.0.2 and NumPy 1.25.0</p>\"], \"postgresql\": [\"PostgreSQL\", \"<p>PostgreSQL 16</p>\"]}",
            "libraryUrl": null,
            "adminUrl": null,
            "challengeQuestion": null,
            "__typename": "QuestionNode"
        }
    }
}