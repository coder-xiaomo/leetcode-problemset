{
    "data": {
        "question": {
            "questionId": "1565",
            "questionFrontendId": "1440",
            "boundTopicId": null,
            "title": "Evaluate Boolean Expression",
            "titleSlug": "evaluate-boolean-expression",
            "content": null,
            "translatedTitle": null,
            "translatedContent": null,
            "isPaidOnly": true,
            "difficulty": "Medium",
            "likes": 200,
            "dislikes": 16,
            "isLiked": null,
            "similarQuestions": "[]",
            "exampleTestcases": "{\"headers\":{\"Variables\":[\"name\",\"value\"],\"Expressions\":[\"left_operand\",\"operator\",\"right_operand\"]},\"rows\":{\"Variables\":[[\"x\",66],[\"y\",77]],\"Expressions\":[[\"x\",\">\",\"y\"],[\"x\",\"<\",\"y\"],[\"x\",\"=\",\"y\"],[\"y\",\">\",\"x\"],[\"y\",\"<\",\"x\"],[\"x\",\"=\",\"x\"]]}}",
            "categoryTitle": "Database",
            "contributors": [],
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database",
                    "translatedName": null,
                    "__typename": "TopicTagNode"
                }
            ],
            "companyTagStats": null,
            "codeSnippets": null,
            "stats": "{\"totalAccepted\": \"25.3K\", \"totalSubmission\": \"34.7K\", \"totalAcceptedRaw\": 25342, \"totalSubmissionRaw\": 34711, \"acRate\": \"73.0%\"}",
            "hints": [],
            "solution": null,
            "status": null,
            "sampleTestCase": "{\"headers\":{\"Variables\":[\"name\",\"value\"],\"Expressions\":[\"left_operand\",\"operator\",\"right_operand\"]},\"rows\":{\"Variables\":[[\"x\",66],[\"y\",77]],\"Expressions\":[[\"x\",\">\",\"y\"],[\"x\",\"<\",\"y\"],[\"x\",\"=\",\"y\"],[\"y\",\">\",\"x\"],[\"y\",\"<\",\"x\"],[\"x\",\"=\",\"x\"]]}}",
            "metaData": "{\"mysql\": [\"Create Table If Not Exists Variables (name varchar(3), value int)\", \"Create Table If Not Exists Expressions (left_operand varchar(3), operator ENUM('>', '<', '='), right_operand varchar(3))\"], \"mssql\": [\"Create Table Variables (name varchar(3), value int)\", \"Create Table Expressions (left_operand varchar(3), operator varchar(3) NOT NULL CHECK (operator IN ('>', '<', '=')), right_operand varchar(3))\"], \"oraclesql\": [\"Create Table Variables (name varchar(3), value int)\", \"Create Table Expressions (left_operand varchar(3), operator varchar(3) NOT NULL CHECK (operator IN ('>', '<', '=')), right_operand varchar(3))\"], \"database\": true, \"name\": \"eval_expression\", \"pythondata\": [\"Variables = pd.DataFrame([], columns=['name', 'value']).astype({'name':'object', 'value':'Int64'})\", \"Expressions = pd.DataFrame([], columns=['left_operand', 'operator', 'right_operand']).astype({'left_operand':'object', 'operator':'object', 'right_operand':'object'})\"], \"postgresql\": [\"Create Table If Not Exists Variables (name varchar(3), value int)\\n\", \"Create Table If Not Exists Expressions (left_operand varchar(3), operator VARCHAR(30) CHECK (operator IN ('>', '<', '=')), right_operand varchar(3))\\n\"], \"database_schema\": {\"Variables\": {\"name\": \"VARCHAR(3)\", \"value\": \"INT\"}, \"Expressions\": {\"left_operand\": \"VARCHAR(3)\", \"operator\": \"ENUM('>', '<', '=')\", \"right_operand\": \"VARCHAR(3)\"}}}",
            "judgerAvailable": true,
            "judgeType": "large",
            "mysqlSchemas": [
                "Create Table If Not Exists Variables (name varchar(3), value int)",
                "Create Table If Not Exists Expressions (left_operand varchar(3), operator ENUM('>', '<', '='), right_operand varchar(3))",
                "Truncate table Variables",
                "insert into Variables (name, value) values ('x', '66')",
                "insert into Variables (name, value) values ('y', '77')",
                "Truncate table Expressions",
                "insert into Expressions (left_operand, operator, right_operand) values ('x', '>', 'y')",
                "insert into Expressions (left_operand, operator, right_operand) values ('x', '<', 'y')",
                "insert into Expressions (left_operand, operator, right_operand) values ('x', '=', 'y')",
                "insert into Expressions (left_operand, operator, right_operand) values ('y', '>', 'x')",
                "insert into Expressions (left_operand, operator, right_operand) values ('y', '<', 'x')",
                "insert into Expressions (left_operand, operator, right_operand) values ('x', '=', 'x')"
            ],
            "enableRunCode": true,
            "enableTestMode": false,
            "enableDebugger": false,
            "envInfo": "{\"mysql\": [\"MySQL\", \"<p><code>MySQL 8.0</code>.</p>\"], \"mssql\": [\"MS SQL Server\", \"<p><code>mssql server 2019</code>.</p>\"], \"oraclesql\": [\"Oracle\", \"<p><code>Oracle Sql 11.2</code>.</p>\"], \"pythondata\": [\"Pandas\", \"<p>Python 3.10 with Pandas 2.0.2 and NumPy 1.25.0</p>\"], \"postgresql\": [\"PostgreSQL\", \"<p>PostgreSQL 16</p>\"]}",
            "libraryUrl": null,
            "adminUrl": null,
            "challengeQuestion": null,
            "__typename": "QuestionNode"
        }
    }
}