{
    "data": {
        "question": {
            "questionId": "3424",
            "questionFrontendId": "3118",
            "boundTopicId": null,
            "title": "Friday Purchase III ",
            "titleSlug": "friday-purchase-iii",
            "content": null,
            "translatedTitle": null,
            "translatedContent": null,
            "isPaidOnly": true,
            "difficulty": "Medium",
            "likes": 3,
            "dislikes": 2,
            "isLiked": null,
            "similarQuestions": "[]",
            "exampleTestcases": "{\"headers\":{\"Purchases\":[\"user_id\",\"purchase_date\",\"amount_spend\"],\"Users\":[\"user_id\",\"membership\"]},\"rows\":{\"Purchases\":[[11,\"2023-11-03\",1126],[15,\"2023-11-10\",7473],[17,\"2023-11-17\",2414],[12,\"2023-11-24\",9692],[8,\"2023-11-24\",5117],[1,\"2023-11-24\",5241],[10,\"2023-11-22\",8266],[13,\"2023-11-21\",12000]],\"Users\":[[11,\"Premium\"],[15,\"VIP\"],[17,\"Standard\"],[12,\"VIP\"],[8,\"Premium\"],[1,\"VIP\"],[10,\"Standard\"],[13,\"Premium\"]]}}",
            "categoryTitle": "Database",
            "contributors": [],
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database",
                    "translatedName": null,
                    "__typename": "TopicTagNode"
                }
            ],
            "companyTagStats": null,
            "codeSnippets": null,
            "stats": "{\"totalAccepted\": \"221\", \"totalSubmission\": \"341\", \"totalAcceptedRaw\": 221, \"totalSubmissionRaw\": 341, \"acRate\": \"64.8%\"}",
            "hints": [],
            "solution": null,
            "status": null,
            "sampleTestCase": "{\"headers\":{\"Purchases\":[\"user_id\",\"purchase_date\",\"amount_spend\"],\"Users\":[\"user_id\",\"membership\"]},\"rows\":{\"Purchases\":[[11,\"2023-11-03\",1126],[15,\"2023-11-10\",7473],[17,\"2023-11-17\",2414],[12,\"2023-11-24\",9692],[8,\"2023-11-24\",5117],[1,\"2023-11-24\",5241],[10,\"2023-11-22\",8266],[13,\"2023-11-21\",12000]],\"Users\":[[11,\"Premium\"],[15,\"VIP\"],[17,\"Standard\"],[12,\"VIP\"],[8,\"Premium\"],[1,\"VIP\"],[10,\"Standard\"],[13,\"Premium\"]]}}",
            "metaData": "{\"mysql\": [\"Create Table if Not Exists Purchases( user_id int, purchase_date date, amount_spend int)\", \"Create Table if Not Exists Users (user_id int, membership enum('Standard', 'Premium', 'VIP'))\"], \"mssql\": [\"Create Table Purchases( user_id int, purchase_date date, amount_spend int)\", \"Create Table  Users (user_id int, membership varchar(30) NOT NULL CHECK ( membership in ('Standard', 'Premium', 'VIP')))\"], \"oraclesql\": [\"Create Table  Purchases( user_id int, purchase_date date, amount_spend int)\", \"ALTER SESSION SET nls_date_format='YYYY-MM-DD'\", \"Create Table  Users (user_id int, membership varchar(30) NOT NULL CHECK ( membership in ('Standard', 'Premium', 'VIP')))\"], \"database\": true, \"name\": \"friday_purchases\", \"postgresql\": [\"CREATE TABLE Purchases (\\n    user_id int,\\n    purchase_date date,\\n    amount_spend int\\n);\", \"SET datestyle = 'ISO, MDY'; \\n\", \"CREATE TABLE Users (\\n    user_id int,\\n    membership varchar(30) NOT NULL CHECK (membership IN ('Standard', 'Premium', 'VIP'))\\n);\"], \"pythondata\": [\"Purchases = pd.DataFrame([], columns=['user_id', 'purchase_date', 'amount_spend']).astype({'user_id':'Int64', 'purchase_date':'datetime64[ns]', 'amount_spend':'Int64'})\\n\", \"Users = pd.DataFrame([], columns=['user_id', 'membership']).astype({\\n    'user_id': 'Int64',\\n    'membership': pd.CategoricalDtype(categories=['Standard', 'Premium', 'VIP'])\\n})\"], \"database_schema\": {\"Purchases\": {\"user_id\": \"INT\", \"purchase_date\": \"DATE\", \"amount_spend\": \"INT\"}, \"Users\": {\"user_id\": \"INT\", \"membership\": \"ENUM('Standard', 'Premium', 'VIP')\"}}}",
            "judgerAvailable": true,
            "judgeType": "large",
            "mysqlSchemas": [
                "Create Table if Not Exists Purchases( user_id int, purchase_date date, amount_spend int)",
                "Create Table if Not Exists Users (user_id int, membership enum('Standard', 'Premium', 'VIP'))",
                "Truncate table Purchases",
                "insert into Purchases (user_id, purchase_date, amount_spend) values ('11', '2023-11-03', '1126')",
                "insert into Purchases (user_id, purchase_date, amount_spend) values ('15', '2023-11-10', '7473')",
                "insert into Purchases (user_id, purchase_date, amount_spend) values ('17', '2023-11-17', '2414')",
                "insert into Purchases (user_id, purchase_date, amount_spend) values ('12', '2023-11-24', '9692')",
                "insert into Purchases (user_id, purchase_date, amount_spend) values ('8', '2023-11-24', '5117')",
                "insert into Purchases (user_id, purchase_date, amount_spend) values ('1', '2023-11-24', '5241')",
                "insert into Purchases (user_id, purchase_date, amount_spend) values ('10', '2023-11-22', '8266')",
                "insert into Purchases (user_id, purchase_date, amount_spend) values ('13', '2023-11-21', '12000')",
                "Truncate table Users",
                "insert into Users (user_id, membership) values ('11', 'Premium')",
                "insert into Users (user_id, membership) values ('15', 'VIP')",
                "insert into Users (user_id, membership) values ('17', 'Standard')",
                "insert into Users (user_id, membership) values ('12', 'VIP')",
                "insert into Users (user_id, membership) values ('8', 'Premium')",
                "insert into Users (user_id, membership) values ('1', 'VIP')",
                "insert into Users (user_id, membership) values ('10', 'Standard')",
                "insert into Users (user_id, membership) values ('13', 'Premium')"
            ],
            "enableRunCode": true,
            "enableTestMode": false,
            "enableDebugger": false,
            "envInfo": "{\"mysql\": [\"MySQL\", \"<p><code>MySQL 8.0</code>.</p>\"], \"mssql\": [\"MS SQL Server\", \"<p><code>mssql server 2019</code>.</p>\"], \"oraclesql\": [\"Oracle\", \"<p><code>Oracle Sql 11.2</code>.</p>\"], \"pythondata\": [\"Pandas\", \"<p>Python 3.10 with Pandas 2.0.2 and NumPy 1.25.0</p>\"], \"postgresql\": [\"PostgreSQL\", \"<p>PostgreSQL 16</p>\"]}",
            "libraryUrl": null,
            "adminUrl": null,
            "challengeQuestion": null,
            "__typename": "QuestionNode"
        }
    }
}