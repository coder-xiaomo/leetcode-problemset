{
    "data": {
        "question": {
            "questionId": "1551",
            "questionFrontendId": "1421",
            "boundTopicId": null,
            "title": "NPV Queries",
            "titleSlug": "npv-queries",
            "content": null,
            "translatedTitle": null,
            "translatedContent": null,
            "isPaidOnly": true,
            "difficulty": "Easy",
            "likes": 54,
            "dislikes": 292,
            "isLiked": null,
            "similarQuestions": "[]",
            "exampleTestcases": "{\"headers\":{\"NPV\":[\"id\",\"year\",\"npv\"],\"Queries\":[\"id\",\"year\"]},\"rows\":{\"NPV\":[[1,2018,100],[7,2020,30],[13,2019,40],[1,2019,113],[2,2008,121],[3,2009,21],[11,2020,99],[7,2019,0]],\"Queries\":[[1,2019],[2,2008],[3,2009],[7,2018],[7,2019],[7,2020],[13,2019]]}}",
            "categoryTitle": "Database",
            "contributors": [],
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database",
                    "translatedName": null,
                    "__typename": "TopicTagNode"
                }
            ],
            "companyTagStats": null,
            "codeSnippets": null,
            "stats": "{\"totalAccepted\": \"25K\", \"totalSubmission\": \"30.2K\", \"totalAcceptedRaw\": 24961, \"totalSubmissionRaw\": 30228, \"acRate\": \"82.6%\"}",
            "hints": [],
            "solution": {
                "id": "2047",
                "canSeeDetail": false,
                "paidOnly": true,
                "hasVideoSolution": false,
                "paidOnlyVideo": true,
                "__typename": "ArticleNode"
            },
            "status": null,
            "sampleTestCase": "{\"headers\":{\"NPV\":[\"id\",\"year\",\"npv\"],\"Queries\":[\"id\",\"year\"]},\"rows\":{\"NPV\":[[1,2018,100],[7,2020,30],[13,2019,40],[1,2019,113],[2,2008,121],[3,2009,21],[11,2020,99],[7,2019,0]],\"Queries\":[[1,2019],[2,2008],[3,2009],[7,2018],[7,2019],[7,2020],[13,2019]]}}",
            "metaData": "{\"mysql\": [\"Create Table If Not Exists NPV (id int, year int, npv int)\", \"Create Table If Not Exists Queries (id int, year int)\"], \"mssql\": [\"Create Table NPV (id int, year int, npv int)\", \"Create Table Queries (id int, year int)\"], \"oraclesql\": [\"Create Table NPV (id int, year int, npv int)\", \"Create Table Queries (id int, year int)\"], \"database\": true, \"name\": \"npv_queries\", \"pythondata\": [\"NPV = pd.DataFrame([], columns=['id', 'year', 'npv']).astype({'id':'Int64', 'year':'Int64', 'npv':'Int64'})\", \"Queries = pd.DataFrame([], columns=['id', 'year']).astype({'id':'Int64', 'year':'Int64'})\\n\"], \"postgresql\": [\"\\nCreate Table If Not Exists NPV (id int, year int, npv int)\\n\", \"Create Table If Not Exists Queries (id int, year int)\"], \"database_schema\": {\"NPV\": {\"id\": \"INT\", \"year\": \"INT\", \"npv\": \"INT\"}, \"Queries\": {\"id\": \"INT\", \"year\": \"INT\"}}}",
            "judgerAvailable": true,
            "judgeType": "large",
            "mysqlSchemas": [
                "Create Table If Not Exists NPV (id int, year int, npv int)",
                "Create Table If Not Exists Queries (id int, year int)",
                "Truncate table NPV",
                "insert into NPV (id, year, npv) values ('1', '2018', '100')",
                "insert into NPV (id, year, npv) values ('7', '2020', '30')",
                "insert into NPV (id, year, npv) values ('13', '2019', '40')",
                "insert into NPV (id, year, npv) values ('1', '2019', '113')",
                "insert into NPV (id, year, npv) values ('2', '2008', '121')",
                "insert into NPV (id, year, npv) values ('3', '2009', '21')",
                "insert into NPV (id, year, npv) values ('11', '2020', '99')",
                "insert into NPV (id, year, npv) values ('7', '2019', '0')",
                "Truncate table Queries",
                "insert into Queries (id, year) values ('1', '2019')",
                "insert into Queries (id, year) values ('2', '2008')",
                "insert into Queries (id, year) values ('3', '2009')",
                "insert into Queries (id, year) values ('7', '2018')",
                "insert into Queries (id, year) values ('7', '2019')",
                "insert into Queries (id, year) values ('7', '2020')",
                "insert into Queries (id, year) values ('13', '2019')"
            ],
            "enableRunCode": true,
            "enableTestMode": false,
            "enableDebugger": false,
            "envInfo": "{\"mysql\": [\"MySQL\", \"<p><code>MySQL 8.0</code>.</p>\"], \"mssql\": [\"MS SQL Server\", \"<p><code>mssql server 2019</code>.</p>\"], \"oraclesql\": [\"Oracle\", \"<p><code>Oracle Sql 11.2</code>.</p>\"], \"pythondata\": [\"Pandas\", \"<p>Python 3.10 with Pandas 2.0.2 and NumPy 1.25.0</p>\"], \"postgresql\": [\"PostgreSQL\", \"<p>PostgreSQL 16</p>\"]}",
            "libraryUrl": null,
            "adminUrl": null,
            "challengeQuestion": null,
            "__typename": "QuestionNode"
        }
    }
}