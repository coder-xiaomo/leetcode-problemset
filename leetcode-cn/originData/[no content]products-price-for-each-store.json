{
    "data": {
        "question": {
            "questionId": "1926",
            "questionFrontendId": "1777",
            "categoryTitle": "Database",
            "boundTopicId": 630073,
            "title": "Product's Price for Each Store",
            "titleSlug": "products-price-for-each-store",
            "content": null,
            "translatedTitle": "每家商店的产品价格",
            "translatedContent": null,
            "isPaidOnly": true,
            "difficulty": "Easy",
            "likes": 44,
            "dislikes": 0,
            "isLiked": null,
            "similarQuestions": "[{\"title\": \"Rearrange Products Table\", \"titleSlug\": \"rearrange-products-table\", \"difficulty\": \"Easy\", \"translatedTitle\": \"\\u6bcf\\u4e2a\\u4ea7\\u54c1\\u5728\\u4e0d\\u540c\\u5546\\u5e97\\u7684\\u4ef7\\u683c\", \"isPaidOnly\": false}, {\"title\": \"Dynamic Pivoting of a Table\", \"titleSlug\": \"dynamic-pivoting-of-a-table\", \"difficulty\": \"Hard\", \"translatedTitle\": \"\\u8868\\u7684\\u52a8\\u6001\\u65cb\\u8f6c\", \"isPaidOnly\": true}]",
            "contributors": [],
            "langToValidPlayground": null,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database",
                    "translatedName": "数据库",
                    "__typename": "TopicTagNode"
                }
            ],
            "companyTagStats": null,
            "codeSnippets": null,
            "stats": "{\"totalAccepted\": \"10.1K\", \"totalSubmission\": \"13.1K\", \"totalAcceptedRaw\": 10119, \"totalSubmissionRaw\": 13072, \"acRate\": \"77.4%\"}",
            "hints": [],
            "solution": null,
            "status": null,
            "sampleTestCase": "{\"headers\":{\"Products\":[\"product_id\",\"store\",\"price\"]},\"rows\":{\"Products\":[[\"0\",\"store1\",\"95\"],[\"0\",\"store3\",\"105\"],[\"0\",\"store2\",\"100\"],[\"1\",\"store1\",\"70\"],[\"1\",\"store3\",\"80\"]]}}",
            "metaData": "{\"mysql\":[\"Create table If Not Exists Products (product_id int, store ENUM('store1', 'store2', 'store3'), price int)\"],\"mssql\":[\"Create table Products (product_id int, store varchar(6) not null check(store in ('store1', 'store2', 'store3')), price int)\"],\"oraclesql\":[\"Create table Products (product_id int, store varchar(6) not null check(store in ('store1', 'store2', 'store3')), price int)\"],\"database\":true,\"name\":\"products_price\",\"pythondata\":[\"Products = pd.DataFrame([], columns=['product_id', 'store', 'price']).astype({'product_id':'Int64', 'store':'category', 'price':'Int64'})\"],\"postgresql\":[\"Create table If Not Exists Products (product_id int, store VARCHAR(30) CHECK (store IN ('store1', 'store2', 'store3')), price int)\\n\"],\"manual\":false,\"database_schema\":{\"Products\":{\"product_id\":\"INT\",\"store\":\"ENUM('store1', 'store2', 'store3')\",\"price\":\"INT\"}}}",
            "judgerAvailable": true,
            "judgeType": "large",
            "mysqlSchemas": [
                "Create table If Not Exists Products (product_id int, store ENUM('store1', 'store2', 'store3'), price int)",
                "Truncate table Products",
                "insert into Products (product_id, store, price) values ('0', 'store1', '95')",
                "insert into Products (product_id, store, price) values ('0', 'store3', '105')",
                "insert into Products (product_id, store, price) values ('0', 'store2', '100')",
                "insert into Products (product_id, store, price) values ('1', 'store1', '70')",
                "insert into Products (product_id, store, price) values ('1', 'store3', '80')"
            ],
            "enableRunCode": true,
            "envInfo": "{\"mysql\":[\"MySQL\",\"<p>\\u7248\\u672c\\uff1a<code>MySQL 8.0<\\/code><\\/p>\"],\"mssql\":[\"MS SQL Server\",\"<p>mssql server 2019.<\\/p>\"],\"oraclesql\":[\"Oracle\",\"<p>Oracle Sql 11.2.<\\/p>\"],\"pythondata\":[\"Pandas\",\"<p>Python 3.10 with Pandas 2.2.2 and NumPy 1.26.4<\\/p>\"],\"postgresql\":[\"PostgreSQL\",\"<p>PostgreSQL 16<\\/p>\"]}",
            "book": null,
            "isSubscribed": false,
            "isDailyQuestion": false,
            "dailyRecordStatus": null,
            "editorType": "CKEDITOR",
            "ugcQuestionId": null,
            "style": "LEETCODE",
            "exampleTestcases": "{\"headers\":{\"Products\":[\"product_id\",\"store\",\"price\"]},\"rows\":{\"Products\":[[\"0\",\"store1\",\"95\"],[\"0\",\"store3\",\"105\"],[\"0\",\"store2\",\"100\"],[\"1\",\"store1\",\"70\"],[\"1\",\"store3\",\"80\"]]}}",
            "__typename": "QuestionNode"
        }
    }
}