{
    "data": {
        "question": {
            "questionId": "2613",
            "questionFrontendId": "2474",
            "categoryTitle": "Database",
            "boundTopicId": 1979417,
            "title": "Customers With Strictly Increasing Purchases",
            "titleSlug": "customers-with-strictly-increasing-purchases",
            "content": null,
            "translatedTitle": "购买量严格增加的客户",
            "translatedContent": null,
            "isPaidOnly": true,
            "difficulty": "Hard",
            "likes": 5,
            "dislikes": 0,
            "isLiked": null,
            "similarQuestions": "[{\"title\": \"Report Contiguous Dates\", \"titleSlug\": \"report-contiguous-dates\", \"difficulty\": \"Hard\", \"translatedTitle\": \"\\u62a5\\u544a\\u7cfb\\u7edf\\u72b6\\u6001\\u7684\\u8fde\\u7eed\\u65e5\\u671f\", \"isPaidOnly\": true}, {\"title\": \"Find the Start and End Number of Continuous Ranges\", \"titleSlug\": \"find-the-start-and-end-number-of-continuous-ranges\", \"difficulty\": \"Medium\", \"translatedTitle\": \"\\u627e\\u5230\\u8fde\\u7eed\\u533a\\u95f4\\u7684\\u5f00\\u59cb\\u548c\\u7ed3\\u675f\\u6570\\u5b57\", \"isPaidOnly\": true}]",
            "contributors": [],
            "langToValidPlayground": null,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database",
                    "translatedName": "数据库",
                    "__typename": "TopicTagNode"
                }
            ],
            "companyTagStats": null,
            "codeSnippets": null,
            "stats": "{\"totalAccepted\": \"1.3K\", \"totalSubmission\": \"2.7K\", \"totalAcceptedRaw\": 1266, \"totalSubmissionRaw\": 2668, \"acRate\": \"47.5%\"}",
            "hints": [],
            "solution": null,
            "status": null,
            "sampleTestCase": "{\"headers\": {\"Orders\": [\"order_id\", \"customer_id\", \"order_date\", \"price\"]}, \"rows\": {\"Orders\": [[1, 1, \"2019-07-01\", 1100], [2, 1, \"2019-11-01\", 1200], [3, 1, \"2020-05-26\", 3000], [4, 1, \"2021-08-31\", 3100], [5, 1, \"2022-12-07\", 4700], [6, 2, \"2015-01-01\", 700], [7, 2, \"2017-11-07\", 1000], [8, 3, \"2017-01-01\", 900], [9, 3, \"2018-11-07\", 900]]}}",
            "metaData": "{\"mysql\":[\"Create table If Not Exists Orders (order_id int, customer_id int, order_date date, price int)\"],\"mssql\":[\"Create table Orders (order_id int, customer_id int, order_date date, price int)\"],\"oraclesql\":[\"Create table Orders (order_id int, customer_id int, order_date date, price int)\",\"ALTER SESSION SET nls_date_format='YYYY-MM-DD'\"],\"database\":true,\"name\":\"find_specific_customers\",\"pythondata\":[\"Orders = pd.DataFrame([], columns=['order_id', 'customer_id', 'order_date', 'price']).astype({'order_id':'Int64', 'customer_id':'Int64', 'order_date':'datetime64[ns]', 'price':'Int64'})\"],\"postgresql\":[\"Create table If Not Exists Orders (order_id int, customer_id int, order_date date, price int)\"],\"database_schema\":{\"Orders\":{\"order_id\":\"INT\",\"customer_id\":\"INT\",\"order_date\":\"DATE\",\"price\":\"INT\"}}}",
            "judgerAvailable": true,
            "judgeType": "large",
            "mysqlSchemas": [
                "Create table If Not Exists Orders (order_id int, customer_id int, order_date date, price int)",
                "Truncate table Orders",
                "insert into Orders (order_id, customer_id, order_date, price) values ('1', '1', '2019-07-01', '1100')",
                "insert into Orders (order_id, customer_id, order_date, price) values ('2', '1', '2019-11-01', '1200')",
                "insert into Orders (order_id, customer_id, order_date, price) values ('3', '1', '2020-05-26', '3000')",
                "insert into Orders (order_id, customer_id, order_date, price) values ('4', '1', '2021-08-31', '3100')",
                "insert into Orders (order_id, customer_id, order_date, price) values ('5', '1', '2022-12-07', '4700')",
                "insert into Orders (order_id, customer_id, order_date, price) values ('6', '2', '2015-01-01', '700')",
                "insert into Orders (order_id, customer_id, order_date, price) values ('7', '2', '2017-11-07', '1000')",
                "insert into Orders (order_id, customer_id, order_date, price) values ('8', '3', '2017-01-01', '900')",
                "insert into Orders (order_id, customer_id, order_date, price) values ('9', '3', '2018-11-07', '900')"
            ],
            "enableRunCode": true,
            "envInfo": "{\"mysql\":[\"MySQL\",\"<p>\\u7248\\u672c\\uff1a<code>MySQL 8.0<\\/code><\\/p>\"],\"mssql\":[\"MS SQL Server\",\"<p>mssql server 2019.<\\/p>\"],\"oraclesql\":[\"Oracle\",\"<p>Oracle Sql 11.2.<\\/p>\"],\"pythondata\":[\"Pandas\",\"<p>Python 3.10 with Pandas 2.2.2 and NumPy 1.26.4<\\/p>\"],\"postgresql\":[\"PostgreSQL\",\"<p>PostgreSQL 16<\\/p>\"]}",
            "book": null,
            "isSubscribed": false,
            "isDailyQuestion": false,
            "dailyRecordStatus": null,
            "editorType": "CKEDITOR",
            "ugcQuestionId": null,
            "style": "LEETCODE",
            "exampleTestcases": "{\"headers\": {\"Orders\": [\"order_id\", \"customer_id\", \"order_date\", \"price\"]}, \"rows\": {\"Orders\": [[1, 1, \"2019-07-01\", 1100], [2, 1, \"2019-11-01\", 1200], [3, 1, \"2020-05-26\", 3000], [4, 1, \"2021-08-31\", 3100], [5, 1, \"2022-12-07\", 4700], [6, 2, \"2015-01-01\", 700], [7, 2, \"2017-11-07\", 1000], [8, 3, \"2017-01-01\", 900], [9, 3, \"2018-11-07\", 900]]}}",
            "__typename": "QuestionNode"
        }
    }
}