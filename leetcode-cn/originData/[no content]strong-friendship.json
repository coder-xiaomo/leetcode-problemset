{
    "data": {
        "question": {
            "questionId": "2097",
            "questionFrontendId": "1949",
            "categoryTitle": "Database",
            "boundTopicId": 897558,
            "title": "Strong Friendship",
            "titleSlug": "strong-friendship",
            "content": null,
            "translatedTitle": "坚定的友谊",
            "translatedContent": null,
            "isPaidOnly": true,
            "difficulty": "Medium",
            "likes": 35,
            "dislikes": 0,
            "isLiked": null,
            "similarQuestions": "[]",
            "contributors": [],
            "langToValidPlayground": null,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database",
                    "translatedName": "数据库",
                    "__typename": "TopicTagNode"
                }
            ],
            "companyTagStats": null,
            "codeSnippets": null,
            "stats": "{\"totalAccepted\": \"4K\", \"totalSubmission\": \"7.6K\", \"totalAcceptedRaw\": 3969, \"totalSubmissionRaw\": 7558, \"acRate\": \"52.5%\"}",
            "hints": [],
            "solution": null,
            "status": null,
            "sampleTestCase": "{\"headers\":{\"Friendship\":[\"user1_id\",\"user2_id\"]},\"rows\":{\"Friendship\":[[1,2],[1,3],[2,3],[1,4],[2,4],[1,5],[2,5],[1,7],[3,7],[1,6],[3,6],[2,6]]}}",
            "metaData": "{\"mysql\":[\"Create table If Not Exists Friendship (user1_id int, user2_id int)\"],\"mssql\":[\"Create table Friendship (user1_id int, user2_id int)\"],\"oraclesql\":[\"Create table Friendship (user1_id int, user2_id int)\"],\"database\":true,\"name\":\"strong_friendship\",\"pythondata\":[\"Friendship = pd.DataFrame([], columns=['user1_id', 'user2_id']).astype({'user1_id':'Int64', 'user2_id':'Int64'})\"],\"postgresql\":[\"Create table If Not Exists Friendship (user1_id int, user2_id int)\"],\"database_schema\":{\"Friendship\":{\"user1_id\":\"INT\",\"user2_id\":\"INT\"}}}",
            "judgerAvailable": true,
            "judgeType": "large",
            "mysqlSchemas": [
                "Create table If Not Exists Friendship (user1_id int, user2_id int)",
                "Truncate table Friendship",
                "insert into Friendship (user1_id, user2_id) values ('1', '2')",
                "insert into Friendship (user1_id, user2_id) values ('1', '3')",
                "insert into Friendship (user1_id, user2_id) values ('2', '3')",
                "insert into Friendship (user1_id, user2_id) values ('1', '4')",
                "insert into Friendship (user1_id, user2_id) values ('2', '4')",
                "insert into Friendship (user1_id, user2_id) values ('1', '5')",
                "insert into Friendship (user1_id, user2_id) values ('2', '5')",
                "insert into Friendship (user1_id, user2_id) values ('1', '7')",
                "insert into Friendship (user1_id, user2_id) values ('3', '7')",
                "insert into Friendship (user1_id, user2_id) values ('1', '6')",
                "insert into Friendship (user1_id, user2_id) values ('3', '6')",
                "insert into Friendship (user1_id, user2_id) values ('2', '6')"
            ],
            "enableRunCode": true,
            "envInfo": "{\"mysql\":[\"MySQL\",\"<p>\\u7248\\u672c\\uff1a<code>MySQL 8.0<\\/code><\\/p>\"],\"mssql\":[\"MS SQL Server\",\"<p>mssql server 2019.<\\/p>\"],\"oraclesql\":[\"Oracle\",\"<p>Oracle Sql 11.2.<\\/p>\"],\"pythondata\":[\"Pandas\",\"<p>Python 3.10 with Pandas 2.0.2 and NumPy 1.25.0<\\/p>\"],\"postgresql\":[\"PostgreSQL\",\"<p>PostgreSQL 16<\\/p>\"]}",
            "book": null,
            "isSubscribed": false,
            "isDailyQuestion": false,
            "dailyRecordStatus": null,
            "editorType": "CKEDITOR",
            "ugcQuestionId": null,
            "style": "LEETCODE",
            "exampleTestcases": "{\"headers\":{\"Friendship\":[\"user1_id\",\"user2_id\"]},\"rows\":{\"Friendship\":[[1,2],[1,3],[2,3],[1,4],[2,4],[1,5],[2,5],[1,7],[3,7],[1,6],[3,6],[2,6]]}}",
            "__typename": "QuestionNode"
        }
    }
}