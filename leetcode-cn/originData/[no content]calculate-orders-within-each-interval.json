{
    "data": {
        "question": {
            "questionId": "3160",
            "questionFrontendId": "2893",
            "categoryTitle": "Database",
            "boundTopicId": 2468419,
            "title": "Calculate Orders Within Each Interval",
            "titleSlug": "calculate-orders-within-each-interval",
            "content": null,
            "translatedTitle": "计算每个区间内的订单",
            "translatedContent": null,
            "isPaidOnly": true,
            "difficulty": "Medium",
            "likes": 1,
            "dislikes": 0,
            "isLiked": null,
            "similarQuestions": "[]",
            "contributors": [],
            "langToValidPlayground": null,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database",
                    "translatedName": "数据库",
                    "__typename": "TopicTagNode"
                }
            ],
            "companyTagStats": null,
            "codeSnippets": null,
            "stats": "{\"totalAccepted\": \"1.2K\", \"totalSubmission\": \"1.7K\", \"totalAcceptedRaw\": 1156, \"totalSubmissionRaw\": 1688, \"acRate\": \"68.5%\"}",
            "hints": [],
            "solution": null,
            "status": null,
            "sampleTestCase": "{\"headers\": {\"Orders\": [\"minute\", \"order_count\"]}, \"rows\": {\"Orders\":[[1,0],[2,2],[3,4],[4,6],[5,1],[6,4],[7,1],[8,2],[9,4],[10,1],[11,4],[12,6]]}}",
            "metaData": "{\"mysql\":[\"Create table if not exists Orders(minute int, order_count int)\"],\"mssql\":[\"Create table Orders(minute int, order_count int)\"],\"oraclesql\":[\"Create table Orders(minute int, order_count int)\"],\"database\":true,\"name\":\"calculate_runs\",\"languages\":[\"mysql\",\"mssql\",\"oraclesql\",\"pythondata\"],\"pythondata\":[\"Orders = pd.DataFrame([], columns=['minute', 'order_count']).astype({'minute':'Int64', 'order_count':'Int64'})\"],\"database_schema\":{\"Orders\":{\"minute\":\"INT\",\"order_count\":\"INT\"}}}",
            "judgerAvailable": true,
            "judgeType": "large",
            "mysqlSchemas": [
                "Create table if not exists Orders(minute int, order_count int)",
                "Truncate table Orders",
                "insert into Orders (minute, order_count) values ('1', '0')",
                "insert into Orders (minute, order_count) values ('2', '2')",
                "insert into Orders (minute, order_count) values ('3', '4')",
                "insert into Orders (minute, order_count) values ('4', '6')",
                "insert into Orders (minute, order_count) values ('5', '1')",
                "insert into Orders (minute, order_count) values ('6', '4')",
                "insert into Orders (minute, order_count) values ('7', '1')",
                "insert into Orders (minute, order_count) values ('8', '2')",
                "insert into Orders (minute, order_count) values ('9', '4')",
                "insert into Orders (minute, order_count) values ('10', '1')",
                "insert into Orders (minute, order_count) values ('11', '4')",
                "insert into Orders (minute, order_count) values ('12', '6')"
            ],
            "enableRunCode": true,
            "envInfo": "{\"mysql\":[\"MySQL\",\"<p>\\u7248\\u672c\\uff1a<code>MySQL 8.0<\\/code><\\/p>\"],\"mssql\":[\"MS SQL Server\",\"<p>mssql server 2019.<\\/p>\"],\"oraclesql\":[\"Oracle\",\"<p>Oracle Sql 11.2.<\\/p>\"],\"pythondata\":[\"Pandas\",\"<p>Python 3.10 with Pandas 2.2.2 and NumPy 1.26.4<\\/p>\"]}",
            "book": null,
            "isSubscribed": false,
            "isDailyQuestion": false,
            "dailyRecordStatus": null,
            "editorType": "CKEDITOR",
            "ugcQuestionId": null,
            "style": "LEETCODE",
            "exampleTestcases": "{\"headers\": {\"Orders\": [\"minute\", \"order_count\"]}, \"rows\": {\"Orders\":[[1,0],[2,2],[3,4],[4,6],[5,1],[6,4],[7,1],[8,2],[9,4],[10,1],[11,4],[12,6]]}}",
            "__typename": "QuestionNode"
        }
    }
}