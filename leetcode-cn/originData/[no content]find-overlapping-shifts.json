{
    "data": {
        "question": {
            "questionId": "3574",
            "questionFrontendId": "3262",
            "categoryTitle": "Database",
            "boundTopicId": 2887671,
            "title": "Find Overlapping Shifts",
            "titleSlug": "find-overlapping-shifts",
            "content": null,
            "translatedTitle": "查找重叠的班次",
            "translatedContent": null,
            "isPaidOnly": true,
            "difficulty": "Medium",
            "likes": 0,
            "dislikes": 0,
            "isLiked": null,
            "similarQuestions": "[]",
            "contributors": [],
            "langToValidPlayground": null,
            "topicTags": [],
            "companyTagStats": null,
            "codeSnippets": null,
            "stats": "{\"totalAccepted\": \"49\", \"totalSubmission\": \"67\", \"totalAcceptedRaw\": 49, \"totalSubmissionRaw\": 67, \"acRate\": \"73.1%\"}",
            "hints": [],
            "solution": null,
            "status": null,
            "sampleTestCase": "{\"headers\":{\"EmployeeShifts\":[\"employee_id\",\"start_time\",\"end_time\"]},\"rows\":{\"EmployeeShifts\":[[1,\"08:00:00\",\"12:00:00\"],[1,\"11:00:00\",\"15:00:00\"],[1,\"14:00:00\",\"18:00:00\"],[2,\"09:00:00\",\"17:00:00\"],[2,\"16:00:00\",\"20:00:00\"],[3,\"10:00:00\",\"12:00:00\"],[3,\"13:00:00\",\"15:00:00\"],[3,\"16:00:00\",\"18:00:00\"],[4,\"08:00:00\",\"10:00:00\"],[4,\"09:00:00\",\"11:00:00\"]]}}",
            "metaData": "{\"mysql\":[\"Create table if not exists EmployeeShifts(employee_id int, start_time time, end_time time)\"],\"mssql\":[\"Create table  EmployeeShifts(employee_id int, start_time time, end_time time)\"],\"oraclesql\":[\"Create table  EmployeeShifts(employee_id number, start_time date, end_time date)\",\"ALTER SESSION SET nls_date_format='HH24:MI:SS'\"],\"database\":true,\"name\":\"find_overlapping_shifts\",\"pythondata\":[\"EmployeeShifts = pd.DataFrame({\\n    'employee_id': pd.Series(dtype='int'),\\n    'start_time': pd.Series(dtype='datetime64[ns]'),\\n    'end_time': pd.Series(dtype='datetime64[ns]')\\n})\"],\"postgresql\":[\"CREATE TABLE IF NOT EXISTS EmployeeShifts (\\n    employee_id INT,\\n    start_time TIME,\\n    end_time TIME\\n);\\n\"],\"database_schema\":{\"EmployeeShifts\":{\"employee_id\":\"INT\",\"start_time\":\"TIME\",\"end_time\":\"TIME\"}}}",
            "judgerAvailable": true,
            "judgeType": "large",
            "mysqlSchemas": [
                "Create table if not exists EmployeeShifts(employee_id int, start_time time, end_time time)",
                "Truncate table EmployeeShifts",
                "insert into EmployeeShifts (employee_id, start_time, end_time) values ('1', '08:00:00', '12:00:00')",
                "insert into EmployeeShifts (employee_id, start_time, end_time) values ('1', '11:00:00', '15:00:00')",
                "insert into EmployeeShifts (employee_id, start_time, end_time) values ('1', '14:00:00', '18:00:00')",
                "insert into EmployeeShifts (employee_id, start_time, end_time) values ('2', '09:00:00', '17:00:00')",
                "insert into EmployeeShifts (employee_id, start_time, end_time) values ('2', '16:00:00', '20:00:00')",
                "insert into EmployeeShifts (employee_id, start_time, end_time) values ('3', '10:00:00', '12:00:00')",
                "insert into EmployeeShifts (employee_id, start_time, end_time) values ('3', '13:00:00', '15:00:00')",
                "insert into EmployeeShifts (employee_id, start_time, end_time) values ('3', '16:00:00', '18:00:00')",
                "insert into EmployeeShifts (employee_id, start_time, end_time) values ('4', '08:00:00', '10:00:00')",
                "insert into EmployeeShifts (employee_id, start_time, end_time) values ('4', '09:00:00', '11:00:00')"
            ],
            "enableRunCode": true,
            "envInfo": "{\"mysql\":[\"MySQL\",\"<p>\\u7248\\u672c\\uff1a<code>MySQL 8.0<\\/code><\\/p>\"],\"mssql\":[\"MS SQL Server\",\"<p>mssql server 2019.<\\/p>\"],\"oraclesql\":[\"Oracle\",\"<p>Oracle Sql 11.2.<\\/p>\"],\"pythondata\":[\"Pandas\",\"<p>Python 3.10 with Pandas 2.0.2 and NumPy 1.25.0<\\/p>\"],\"postgresql\":[\"PostgreSQL\",\"<p>PostgreSQL 16<\\/p>\"]}",
            "book": null,
            "isSubscribed": false,
            "isDailyQuestion": false,
            "dailyRecordStatus": null,
            "editorType": "CKEDITOR",
            "ugcQuestionId": null,
            "style": "LEETCODE",
            "exampleTestcases": "{\"headers\":{\"EmployeeShifts\":[\"employee_id\",\"start_time\",\"end_time\"]},\"rows\":{\"EmployeeShifts\":[[1,\"08:00:00\",\"12:00:00\"],[1,\"11:00:00\",\"15:00:00\"],[1,\"14:00:00\",\"18:00:00\"],[2,\"09:00:00\",\"17:00:00\"],[2,\"16:00:00\",\"20:00:00\"],[3,\"10:00:00\",\"12:00:00\"],[3,\"13:00:00\",\"15:00:00\"],[3,\"16:00:00\",\"18:00:00\"],[4,\"08:00:00\",\"10:00:00\"],[4,\"09:00:00\",\"11:00:00\"]]}}",
            "__typename": "QuestionNode"
        }
    }
}