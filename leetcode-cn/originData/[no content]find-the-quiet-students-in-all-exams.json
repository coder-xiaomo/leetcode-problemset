{
    "data": {
        "question": {
            "questionId": "1546",
            "questionFrontendId": "1412",
            "categoryTitle": "Database",
            "boundTopicId": 211538,
            "title": "Find the Quiet Students in All Exams",
            "titleSlug": "find-the-quiet-students-in-all-exams",
            "content": null,
            "translatedTitle": "查找成绩处于中游的学生",
            "translatedContent": null,
            "isPaidOnly": true,
            "difficulty": "Hard",
            "likes": 27,
            "dislikes": 0,
            "isLiked": null,
            "similarQuestions": "[]",
            "contributors": [],
            "langToValidPlayground": null,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database",
                    "translatedName": "数据库",
                    "__typename": "TopicTagNode"
                }
            ],
            "companyTagStats": null,
            "codeSnippets": null,
            "stats": "{\"totalAccepted\": \"8K\", \"totalSubmission\": \"15.3K\", \"totalAcceptedRaw\": 8035, \"totalSubmissionRaw\": 15337, \"acRate\": \"52.4%\"}",
            "hints": [],
            "solution": null,
            "status": null,
            "sampleTestCase": "{\"headers\": {\"Student\": [\"student_id\", \"student_name\"], \"Exam\": [\"exam_id\", \"student_id\", \"score\"]}, \"rows\": {\"Student\": [[1, \"Daniel\"], [2, \"Jade\"], [3, \"Stella\"], [4, \"Jonathan\"], [5, \"Will\"]], \"Exam\": [[10, 1, 70], [10, 2, 80], [10, 3, 90], [20, 1, 80], [30, 1, 70], [30, 3, 80], [30, 4, 90], [40, 1, 60], [40, 2, 70], [40, 4, 80]]}}",
            "metaData": "{\"mysql\":[\"Create table If Not Exists Student (student_id int, student_name varchar(30))\",\"Create table If Not Exists Exam (exam_id int, student_id int, score int)\"],\"mssql\":[\"Create table Student (student_id int, student_name varchar(30))\",\"Create table Exam (exam_id int, student_id int, score int)\"],\"oraclesql\":[\"Create table Student (student_id int, student_name varchar(30))\",\"Create table Exam (exam_id int, student_id int, score int)\"],\"database\":true,\"name\":\"find_quiet_students\",\"pythondata\":[\"Student = pd.DataFrame([], columns=['student_id', 'student_name']).astype({'student_id':'Int64', 'student_name':'object'})\",\"Exam = pd.DataFrame([], columns=['exam_id', 'student_id', 'score']).astype({'exam_id':'Int64', 'student_id':'Int64', 'score':'Int64'})\"],\"postgresql\":[\"\\nCreate table If Not Exists Student (student_id int, student_name varchar(30))\\n\",\"Create table If Not Exists Exam (exam_id int, student_id int, score int)\"],\"database_schema\":{\"Student\":{\"student_id\":\"INT\",\"student_name\":\"VARCHAR(30)\"},\"Exam\":{\"exam_id\":\"INT\",\"student_id\":\"INT\",\"score\":\"INT\"}}}",
            "judgerAvailable": true,
            "judgeType": "large",
            "mysqlSchemas": [
                "Create table If Not Exists Student (student_id int, student_name varchar(30))",
                "Create table If Not Exists Exam (exam_id int, student_id int, score int)",
                "Truncate table Student",
                "insert into Student (student_id, student_name) values ('1', 'Daniel')",
                "insert into Student (student_id, student_name) values ('2', 'Jade')",
                "insert into Student (student_id, student_name) values ('3', 'Stella')",
                "insert into Student (student_id, student_name) values ('4', 'Jonathan')",
                "insert into Student (student_id, student_name) values ('5', 'Will')",
                "Truncate table Exam",
                "insert into Exam (exam_id, student_id, score) values ('10', '1', '70')",
                "insert into Exam (exam_id, student_id, score) values ('10', '2', '80')",
                "insert into Exam (exam_id, student_id, score) values ('10', '3', '90')",
                "insert into Exam (exam_id, student_id, score) values ('20', '1', '80')",
                "insert into Exam (exam_id, student_id, score) values ('30', '1', '70')",
                "insert into Exam (exam_id, student_id, score) values ('30', '3', '80')",
                "insert into Exam (exam_id, student_id, score) values ('30', '4', '90')",
                "insert into Exam (exam_id, student_id, score) values ('40', '1', '60')",
                "insert into Exam (exam_id, student_id, score) values ('40', '2', '70')",
                "insert into Exam (exam_id, student_id, score) values ('40', '4', '80')"
            ],
            "enableRunCode": true,
            "envInfo": "{\"mysql\":[\"MySQL\",\"<p>\\u7248\\u672c\\uff1a<code>MySQL 8.0<\\/code><\\/p>\"],\"mssql\":[\"MS SQL Server\",\"<p>mssql server 2019.<\\/p>\"],\"oraclesql\":[\"Oracle\",\"<p>Oracle Sql 11.2.<\\/p>\"],\"pythondata\":[\"Pandas\",\"<p>Python 3.10 with Pandas 2.0.2 and NumPy 1.25.0<\\/p>\"],\"postgresql\":[\"PostgreSQL\",\"<p>PostgreSQL 16<\\/p>\"]}",
            "book": null,
            "isSubscribed": false,
            "isDailyQuestion": false,
            "dailyRecordStatus": null,
            "editorType": "CKEDITOR",
            "ugcQuestionId": null,
            "style": "LEETCODE",
            "exampleTestcases": "{\"headers\": {\"Student\": [\"student_id\", \"student_name\"], \"Exam\": [\"exam_id\", \"student_id\", \"score\"]}, \"rows\": {\"Student\": [[1, \"Daniel\"], [2, \"Jade\"], [3, \"Stella\"], [4, \"Jonathan\"], [5, \"Will\"]], \"Exam\": [[10, 1, 70], [10, 2, 80], [10, 3, 90], [20, 1, 80], [30, 1, 70], [30, 3, 80], [30, 4, 90], [40, 1, 60], [40, 2, 70], [40, 4, 80]]}}",
            "__typename": "QuestionNode"
        }
    }
}