{
    "data": {
        "question": {
            "questionId": "1914",
            "questionFrontendId": "1767",
            "categoryTitle": "Database",
            "boundTopicId": 612949,
            "title": "Find the Subtasks That Did Not Execute",
            "titleSlug": "find-the-subtasks-that-did-not-execute",
            "content": null,
            "translatedTitle": "寻找没有被执行的任务对",
            "translatedContent": null,
            "isPaidOnly": true,
            "difficulty": "Hard",
            "likes": 48,
            "dislikes": 0,
            "isLiked": null,
            "similarQuestions": "[]",
            "contributors": [],
            "langToValidPlayground": null,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database",
                    "translatedName": "数据库",
                    "__typename": "TopicTagNode"
                }
            ],
            "companyTagStats": null,
            "codeSnippets": null,
            "stats": "{\"totalAccepted\": \"8K\", \"totalSubmission\": \"10.8K\", \"totalAcceptedRaw\": 8024, \"totalSubmissionRaw\": 10812, \"acRate\": \"74.2%\"}",
            "hints": [],
            "solution": null,
            "status": null,
            "sampleTestCase": "{\"headers\": {\"Tasks\": [\"task_id\", \"subtasks_count\"], \"Executed\": [\"task_id\", \"subtask_id\"]}, \"rows\": {\"Tasks\": [[1, 3], [2, 2], [3, 4]], \"Executed\": [[1, 2], [3, 1], [3, 2], [3, 3], [3, 4]]}}",
            "metaData": "{\"mysql\":[\"Create table If Not Exists Tasks (task_id int, subtasks_count int)\",\"Create table If Not Exists Executed (task_id int, subtask_id int)\"],\"mssql\":[\"Create table Tasks (task_id int, subtasks_count int)\",\"Create table Executed (task_id int, subtask_id int)\"],\"oraclesql\":[\"Create table Tasks (task_id int, subtasks_count int)\",\"Create table Executed (task_id int, subtask_id int)\"],\"database\":true,\"name\":\"find_subtasks\",\"pythondata\":[\"Tasks = pd.DataFrame([], columns=['task_id', 'subtasks_count']).astype({'task_id':'Int64', 'subtasks_count':'Int64'})\",\"Executed = pd.DataFrame([], columns=['task_id', 'subtask_id']).astype({'task_id':'Int64', 'subtask_id':'Int64'})\"],\"postgresql\":[\"\\nCreate table If Not Exists Tasks (task_id int, subtasks_count int)\\n\",\"Create table If Not Exists Executed (task_id int, subtask_id int)\"],\"database_schema\":{\"Tasks\":{\"task_id\":\"INT\",\"subtasks_count\":\"INT\"},\"Executed\":{\"task_id\":\"INT\",\"subtask_id\":\"INT\"}}}",
            "judgerAvailable": true,
            "judgeType": "large",
            "mysqlSchemas": [
                "Create table If Not Exists Tasks (task_id int, subtasks_count int)",
                "Create table If Not Exists Executed (task_id int, subtask_id int)",
                "Truncate table Tasks",
                "insert into Tasks (task_id, subtasks_count) values ('1', '3')",
                "insert into Tasks (task_id, subtasks_count) values ('2', '2')",
                "insert into Tasks (task_id, subtasks_count) values ('3', '4')",
                "Truncate table Executed",
                "insert into Executed (task_id, subtask_id) values ('1', '2')",
                "insert into Executed (task_id, subtask_id) values ('3', '1')",
                "insert into Executed (task_id, subtask_id) values ('3', '2')",
                "insert into Executed (task_id, subtask_id) values ('3', '3')",
                "insert into Executed (task_id, subtask_id) values ('3', '4')"
            ],
            "enableRunCode": true,
            "envInfo": "{\"mysql\":[\"MySQL\",\"<p>\\u7248\\u672c\\uff1a<code>MySQL 8.0<\\/code><\\/p>\"],\"mssql\":[\"MS SQL Server\",\"<p>mssql server 2019.<\\/p>\"],\"oraclesql\":[\"Oracle\",\"<p>Oracle Sql 11.2.<\\/p>\"],\"pythondata\":[\"Pandas\",\"<p>Python 3.10 with Pandas 2.2.2 and NumPy 1.26.4<\\/p>\"],\"postgresql\":[\"PostgreSQL\",\"<p>PostgreSQL 16<\\/p>\"]}",
            "book": null,
            "isSubscribed": false,
            "isDailyQuestion": false,
            "dailyRecordStatus": null,
            "editorType": "CKEDITOR",
            "ugcQuestionId": null,
            "style": "LEETCODE",
            "exampleTestcases": "{\"headers\": {\"Tasks\": [\"task_id\", \"subtasks_count\"], \"Executed\": [\"task_id\", \"subtask_id\"]}, \"rows\": {\"Tasks\": [[1, 3], [2, 2], [3, 4]], \"Executed\": [[1, 2], [3, 1], [3, 2], [3, 3], [3, 4]]}}",
            "__typename": "QuestionNode"
        }
    }
}