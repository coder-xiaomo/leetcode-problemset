{
    "data": {
        "question": {
            "questionId": "1608",
            "questionFrontendId": "1468",
            "categoryTitle": "Database",
            "boundTopicId": 274215,
            "title": "Calculate Salaries",
            "titleSlug": "calculate-salaries",
            "content": null,
            "translatedTitle": "计算税后工资",
            "translatedContent": null,
            "isPaidOnly": true,
            "difficulty": "Medium",
            "likes": 22,
            "dislikes": 0,
            "isLiked": null,
            "similarQuestions": "[]",
            "contributors": [],
            "langToValidPlayground": null,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database",
                    "translatedName": "数据库",
                    "__typename": "TopicTagNode"
                }
            ],
            "companyTagStats": null,
            "codeSnippets": null,
            "stats": "{\"totalAccepted\": \"7.6K\", \"totalSubmission\": \"11.2K\", \"totalAcceptedRaw\": 7585, \"totalSubmissionRaw\": 11242, \"acRate\": \"67.5%\"}",
            "hints": [],
            "solution": null,
            "status": null,
            "sampleTestCase": "{\"headers\":{\"Salaries\":[\"company_id\",\"employee_id\",\"employee_name\",\"salary\"]},\"rows\":{\"Salaries\":[[1,1,\"Tony\",2000],[1,2,\"Pronub\",21300],[1,3,\"Tyrrox\",10800],[2,1,\"Pam\",300],[2,7,\"Bassem\",450],[2,9,\"Hermione\",700],[3,7,\"Bocaben\",100],[3,2,\"Ognjen\",2200],[3,13,\"Nyancat\",3300],[3,15,\"Morninngcat\",7777]]}}",
            "metaData": "{\"mysql\":[\"Create table If Not Exists Salaries (company_id int, employee_id int, employee_name varchar(13), salary int)\"],\"mssql\":[\"Create table Salaries (company_id int, employee_id int, employee_name varchar(13), salary int)\"],\"oraclesql\":[\"Create table Salaries (company_id int, employee_id int, employee_name varchar(13), salary int)\"],\"database\":true,\"name\":\"calculate_salaries\",\"pythondata\":[\"Salaries = pd.DataFrame([], columns=['company_id', 'employee_id', 'employee_name', 'salary']).astype({'company_id':'Int64', 'employee_id':'Int64', 'employee_name':'object', 'salary':'Int64'})\"],\"postgresql\":[\"\\nCreate table If Not Exists Salaries (company_id int, employee_id int, employee_name varchar(13), salary int)\"],\"database_schema\":{\"Salaries\":{\"company_id\":\"INT\",\"employee_id\":\"INT\",\"employee_name\":\"VARCHAR(13)\",\"salary\":\"INT\"}}}",
            "judgerAvailable": true,
            "judgeType": "large",
            "mysqlSchemas": [
                "Create table If Not Exists Salaries (company_id int, employee_id int, employee_name varchar(13), salary int)",
                "Truncate table Salaries",
                "insert into Salaries (company_id, employee_id, employee_name, salary) values ('1', '1', 'Tony', '2000')",
                "insert into Salaries (company_id, employee_id, employee_name, salary) values ('1', '2', 'Pronub', '21300')",
                "insert into Salaries (company_id, employee_id, employee_name, salary) values ('1', '3', 'Tyrrox', '10800')",
                "insert into Salaries (company_id, employee_id, employee_name, salary) values ('2', '1', 'Pam', '300')",
                "insert into Salaries (company_id, employee_id, employee_name, salary) values ('2', '7', 'Bassem', '450')",
                "insert into Salaries (company_id, employee_id, employee_name, salary) values ('2', '9', 'Hermione', '700')",
                "insert into Salaries (company_id, employee_id, employee_name, salary) values ('3', '7', 'Bocaben', '100')",
                "insert into Salaries (company_id, employee_id, employee_name, salary) values ('3', '2', 'Ognjen', '2200')",
                "insert into Salaries (company_id, employee_id, employee_name, salary) values ('3', '13', 'Nyancat', '3300')",
                "insert into Salaries (company_id, employee_id, employee_name, salary) values ('3', '15', 'Morninngcat', '7777')"
            ],
            "enableRunCode": true,
            "envInfo": "{\"mysql\":[\"MySQL\",\"<p>\\u7248\\u672c\\uff1a<code>MySQL 8.0<\\/code><\\/p>\"],\"mssql\":[\"MS SQL Server\",\"<p>mssql server 2019.<\\/p>\"],\"oraclesql\":[\"Oracle\",\"<p>Oracle Sql 11.2.<\\/p>\"],\"pythondata\":[\"Pandas\",\"<p>Python 3.10 with Pandas 2.2.2 and NumPy 1.26.4<\\/p>\"],\"postgresql\":[\"PostgreSQL\",\"<p>PostgreSQL 16<\\/p>\"]}",
            "book": null,
            "isSubscribed": false,
            "isDailyQuestion": false,
            "dailyRecordStatus": null,
            "editorType": "CKEDITOR",
            "ugcQuestionId": null,
            "style": "LEETCODE",
            "exampleTestcases": "{\"headers\":{\"Salaries\":[\"company_id\",\"employee_id\",\"employee_name\",\"salary\"]},\"rows\":{\"Salaries\":[[1,1,\"Tony\",2000],[1,2,\"Pronub\",21300],[1,3,\"Tyrrox\",10800],[2,1,\"Pam\",300],[2,7,\"Bassem\",450],[2,9,\"Hermione\",700],[3,7,\"Bocaben\",100],[3,2,\"Ognjen\",2200],[3,13,\"Nyancat\",3300],[3,15,\"Morninngcat\",7777]]}}",
            "__typename": "QuestionNode"
        }
    }
}