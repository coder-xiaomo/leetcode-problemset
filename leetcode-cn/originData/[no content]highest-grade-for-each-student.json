{
    "data": {
        "question": {
            "questionId": "1214",
            "questionFrontendId": "1112",
            "categoryTitle": "Database",
            "boundTopicId": 33180,
            "title": "Highest Grade For Each Student",
            "titleSlug": "highest-grade-for-each-student",
            "content": null,
            "translatedTitle": "每位学生的最高成绩",
            "translatedContent": null,
            "isPaidOnly": true,
            "difficulty": "Medium",
            "likes": 71,
            "dislikes": 0,
            "isLiked": null,
            "similarQuestions": "[]",
            "contributors": [],
            "langToValidPlayground": null,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database",
                    "translatedName": "数据库",
                    "__typename": "TopicTagNode"
                }
            ],
            "companyTagStats": null,
            "codeSnippets": null,
            "stats": "{\"totalAccepted\": \"21.5K\", \"totalSubmission\": \"33.2K\", \"totalAcceptedRaw\": 21544, \"totalSubmissionRaw\": 33166, \"acRate\": \"65.0%\"}",
            "hints": [],
            "solution": null,
            "status": null,
            "sampleTestCase": "{\"headers\":{\"Enrollments\":[\"student_id\",\"course_id\",\"grade\"]},\"rows\":{\"Enrollments\":[[2,2,95],[2,3,95],[1,1,90],[1,2,99],[3,1,80],[3,2,75],[3,3,82]]}}",
            "metaData": "{\"mysql\":[\"Create table If Not Exists Enrollments (student_id int, course_id int, grade int)\"],\"mssql\":[\"Create table Enrollments (student_id int, course_id int, grade int)\"],\"oraclesql\":[\"Create table Enrollments (student_id int, course_id int, grade int)\"],\"database\":true,\"name\":\"highest_grade\",\"pythondata\":[\"Enrollments = pd.DataFrame([], columns=['student_id', 'course_id', 'grade']).astype({'student_id':'Int64', 'course_id':'Int64', 'grade':'Int64'})\"],\"postgresql\":[\"\\nCreate table If Not Exists Enrollments (student_id int, course_id int, grade int)\"],\"database_schema\":{\"Enrollments\":{\"student_id\":\"INT\",\"course_id\":\"INT\",\"grade\":\"INT\"}}}",
            "judgerAvailable": true,
            "judgeType": "large",
            "mysqlSchemas": [
                "Create table If Not Exists Enrollments (student_id int, course_id int, grade int)",
                "Truncate table Enrollments",
                "insert into Enrollments (student_id, course_id, grade) values ('2', '2', '95')",
                "insert into Enrollments (student_id, course_id, grade) values ('2', '3', '95')",
                "insert into Enrollments (student_id, course_id, grade) values ('1', '1', '90')",
                "insert into Enrollments (student_id, course_id, grade) values ('1', '2', '99')",
                "insert into Enrollments (student_id, course_id, grade) values ('3', '1', '80')",
                "insert into Enrollments (student_id, course_id, grade) values ('3', '2', '75')",
                "insert into Enrollments (student_id, course_id, grade) values ('3', '3', '82')"
            ],
            "enableRunCode": true,
            "envInfo": "{\"mysql\":[\"MySQL\",\"<p>\\u7248\\u672c\\uff1a<code>MySQL 8.0<\\/code><\\/p>\"],\"mssql\":[\"MS SQL Server\",\"<p>mssql server 2019.<\\/p>\"],\"oraclesql\":[\"Oracle\",\"<p>Oracle Sql 11.2.<\\/p>\"],\"pythondata\":[\"Pandas\",\"<p>Python 3.10 with Pandas 2.0.2 and NumPy 1.25.0<\\/p>\"],\"postgresql\":[\"PostgreSQL\",\"<p>PostgreSQL 16<\\/p>\"]}",
            "book": null,
            "isSubscribed": false,
            "isDailyQuestion": false,
            "dailyRecordStatus": null,
            "editorType": "CKEDITOR",
            "ugcQuestionId": null,
            "style": "LEETCODE",
            "exampleTestcases": "{\"headers\":{\"Enrollments\":[\"student_id\",\"course_id\",\"grade\"]},\"rows\":{\"Enrollments\":[[2,2,95],[2,3,95],[1,1,90],[1,2,99],[3,1,80],[3,2,75],[3,3,82]]}}",
            "__typename": "QuestionNode"
        }
    }
}